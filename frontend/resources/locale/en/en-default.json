{
  "login": {
    "title": "Login",
    "username": "Username",
    "password": "Password",
    "loginButton": "Log in",
    "sessionExpired": "Session has expired. Please login again",
    "password.changeTitle": "Please change password",
    "password.oldPassword": "Old password",
    "password.newPassword": "New password",
    "password.confirmNewPassword": "Please confirm password",
    "password.changeButton": "Change",
    "password.attentionTitle": "Attention",
    "password.equalPasswords": "New password should be different from old one",
    "password.notEqualPasswords": "Passwords do not match!",
    "password.passwordRequired": "Make sure thay you entered and confirmed your password",
    "password.successfullyChanged": "Password is successfully changed",
    "password.invalidOldPassword": "Old password is invalid!"
  },
  "dashboard": {
    "exportStats.tooltip": "Export statistic on entities / lookup entities",
    "exportStats.message": "Statistic export is started. Result will be available in notifications",
    "displayModelsNotConfigured": "Models for display are not configured",
    "total": "Total",
    "updated": "Updated",
    "duplicateGroups": "Duplicate groups",
    "merged": "Merged",
    "withErrors": "With errors",
    "critical": "Critical",
    "high": "High",
    "normal": "Normal",
    "low": "Low",
    "currentState": "Current state",
    "recordsStats": "Records statistics",
    "errorsStats": "Errors statistics",
    "categoryErrors": "Category errors",
    "day": "Day",
    "week": "Week",
    "month": "Month",
    "totalErrors": "Total errors",
    "totalRecords": "Total records",
    "ofDuplicates": "duplicates",
    "ofDuplicateGroups": "duplicates groups",
    "ofUpdated": "updated",
    "ofMerged": "merged",
    "ofNew": "new"
  },
  "search": {
    "wizard.stepType": "Operation selection",
    "wizard.stepSettings": "Operation settings",
    "wizard.stepApply": "Confirmation",
    "wizard.selectionTitle": "Selected items {{count}}",
    "wizard.next": "Next",
    "wizard.prev": "$t(common:back)",
    "wizard.attributeEmptyText": "Please select attribute",
    "wizard.classifierEmptyText": "Please select classifier",
    "wizard.relationEmptyText": "Please select relation",
    "wizard.requiredError": "You should select at least one attribute, classifier or relation",
    "wizard.dataFillError": "Error in filling data",
    "wizard.securityLabelError": "Security label error",
    "wizard.removeSoft": "Logic (data can be restored)",
    "wizard.removeHard": "Phisical (data can not be restored)",
    "wizard.confirmTitle": "Confirmation",
    "wizard.operationStart": "Batch operation {{name}}  is started",
    "wizard.operationError": "Error in execution of batch operation",
    "wizard.noOperationSettings": "Settings for this operation do not exist.",
    "wizard.loadSettingsError": "Error in loading settings.",
    "wizard.operationWillStart": "Batch operation {{name}} will be started",
    "wizard.operations": "Batch operations",
    "wizard.loadDataBehalfSysytem": "Load data on behalf of source system",
    "wizard.ignoreEmptyCells": "Ignore empty cells",
    "wizard.prepareData": "Data preparation",
    "wizard.needDownloadTemplate": "Please download template and fill it.",
    "wizard.downloadTemplate": "Download template",
    "wizard.selectFile": "Select file",
    "wizard.selectPrevStepTemplate": "Please select xlsx template filled in the previous step.",
    "wizard.dataHandlingProcess": "Data are received for handling",
    "wizard.maximum": "Maximum",
    "query.addSearchAttribute": "Add attribute for search",
    "query.searchAttributesNotExists": "Search attributes do not exist",
    "query.addToSort": "Add to sort",
    "query.removeFromSort": "Remove from sort",
    "query.saveCurrentQueryParams": "Save current query params",
    "query.noMatter": "No matter",
    "query.range": "Range",
    "query.slowQuery": "Query can be slow",
    "query.empty": "Empty",
    "query.notEmpty": "Not empty",
    "query.exactValue": "Exact value / range",
    "query.excludeValue": "Exclude value / range",
    "query.startWith": "Start with",
    "query.contains": "Contain",
    "query.bySimilarity": "By similarity",
    "query.priorityUp": "Increase priority",
    "query.priorityDown": "Lower priority",
    "query.sortAsc": "Ascending",
    "query.sortDesc": "Descending",
    "query.noSort": "Without sort",
    "query.removeAttribute": "Do you want to remove attribute from search?",
    "query.searchError": "Search query error",
    "query.keyword": "Keyword",
    "query.extra": "Extra",
    "query.system": "System",
    "query.allPeriodActual": "All actual time intervals",
    "query.includeInactive": "Include inactive time intervals",
    "query.pendingOnly": "Only pending",
    "query.duplicatesOnly": "Only duplicates",
    "query.inactiveOnly": "Only inactive records",
    "query.errorsOnly": "Only with errors",
    "query.addLinkedRecord": "Add linked records",
    "query.showMore": "Show more...",
    "query.hide": "Hide",
    "query.recordsNotSelected": "Records are not selected",
    "query.selectRecords": "Record selection for relation",
    "query.metaModelLoadError": "Error in loading metamodel for relation",
    "query.removeRelationSearchPanel": "Remove search panel by relations",
    "query.addRelationSearchPanel": "Add search panel by relations",
    "query.classifierAttributes": "Ð¡lassifier attributes",
    "query.title": "Search ",
    "query.or": "Or",
    "query.newLinkedRecord": "New linked record",
    "query.enterSearchQuery": "Please enter search query, click \"Search\" and open record",
    "query.enterName": "Please, enter name",
    "query.selectEntityOrLookupEntityForSearch": "$t(glossary:selectEntityOrLookupEntity) for data search",
    "query.idSearch": "Search by ID",
    "query.searchBy": "Search by ",
    "query.recordNotFound": "Record with this {{searchBy}} is not found",
    "query.recordSets": "Record set",
    "query.noRecords": "No records",
    "query.searchParamsCleaned": "Search parameters is cleaned",
    "query.unknownSearchParamType": "Unknown search parameter type",
    "recordshow.createNewRecord": "Create new record",
    "recordshow.leaveUnsavedRecord": "Are you sure that you want to leave unsaved record?",
    "recordshow.metamodelNotMatchConsolidation": "Record metamodel does not match consolidation",
    "recordshow.loadDuplicateError": "Error occured in loading duplicates",
    "resultset.empty": "No search results",
    "resultset.selectAll": "Select all search results",
    "resultset.selectPage": "Select results on page",
    "resultset.deselectAll": "Deselect",
    "resultset.results": "Results",
    "tableresultset.resetTableSettings": "Reset table settings",
    "tableresultset.resultsInTableForm": "Search result in table form",
    "tableresultset.resultsType": "Search result: table",
    "tableresultset.value": "Value",
    "tableresultset.column": "Column",
    "tableresultset.description": "Description",
    "preset.deletePrompt": "Do you want to delete selected saved queries?",
    "preset.deleteTooltip": "Delete selected saved queries",
    "preset.savedSearchQuery": "Saved queries",
    "preset.noRecords": "no records",
    "preset.enterName": "Please enter name",
    "preset.showMore": "Show more...",
    "preset.searchQuerySaved": "Query '{{name}}' is saved",
    "preset.queryNameUnique": "Search query name should be unique in entity / lookup entity"
  },
  "dataviewer": {
    "recordWithoutChanges": "Record without changes",
    "cancelCreateRecord": "Cancel of creating record",
    "confirmCancelCreateRecord": "Are you sure that you want to cancel?",
    "confirmRemoveRecord": "Are you sure that you want to remove record?",
    "confirmRestoreRecord": "Are you sure that you want to restore record?",
    "loadTimeItervalError": "Falied to load time intervals",
    "loadDataRecordError": "Falied to load data record",
    "loadClassifierNodesInfoError": "Falied to load information by classifier nodes",
    "jmsPublish": "Publish JMS",
    "manualMerge": "Merge manually",
    "originRecord": "Original record",
    "info": "Information",
    "mergeClusterCount": "Merge ({{count}})",
    "accessDeniedHasBackRels": "There are backreferences. You have no privileges to view.",
    "backRelsNotExist": "There are no backreferences. ",
    "refreshLoading": "Record updating...",
    "recordSaveSuccess": "Record is saved",
    "recordSaveDQFailure": "Record is not saved because of quality rule errors",
    "recordSaveFailure": "Record is not saved",
    "recordDeleteSuccess": "Record is deleted",
    "recordRelationsSaveFailure": "Failed to save relations. Record is saved partly.",
    "timeIntervalError": "Time intervals do not exist.",
    "findOriginTimeIntervalError": "Failed to find interval for origin view",
    "timeIntervalDeleteSuccess": "Time interval has been deleted",
    "timeIntervalDeleteFailure": "Failed to delete time interval ",
    "intersectionTimeInterval": "Current actual time intervals are changed",
    "showRemovedTimeInterval": "Show removed",
    "makeTimeInterval": "Create new actual time interval",
    "cancelCreateTimeInterval": "Cancel time interval",
    "removeTimeInterval": "Remove actual time interval",
    "restoreTimeInterval": "Restore actual time interval",
    "timeIntervalRestored": "Time interval has been restored",
    "removeCurrentTimeInterval": "Remove current time interval",
    "publishJmsSuccess": "Query for JMS-notification is successfully sent.",
    "publishJmsFailure": "Failed to send query for JMS-notification",
    "repeatRestoreAfterCheck": "Please repeat restoring after check",
    "confirmRecordRefresh": "Are you sure that you want to update record?",
    "confirmJmsRefresh": "Are you sure that you want to send query for JMS-notification?",
    "recordInfo": "Information about record",
    "hiddenAttributes": "Hidden attributes",
    "recordState": "Record state after operation",
    "approval": "Approval",
    "approve": "Approve",
    "mergeCount": "Merge ({{count}})",
    "errorsCount": "Errors ({{count}})",
    "readOnly": "Read-only",
    "onApproval": "On approval",
    "decline": "Decline",
    "loadRecordFromSource": "Record loading from source",
    "view": "View",
    "loadingData": "Data loading",
    "confirmCloseUnsavedRecord": "Are you sure that you want to close unsaved record?",
    "selectNoRecords": "- No records -",
    "selectNewRecord": "- New record -",
    "recordId": "Record ID",
    "loading": "...loading...",
    "allPeriods": "all periods",
    "rollUp": "collapse",
    "approveNeeded": "Should be approved"
  },
  "dataentity": {
    "unknownGroupAttribute": "Attributes without group",
    "classifierLoadError": "Classifier loading error",
    "addValue": "Add value",
    "notImplementedInitInputInClass": "Method InitInput is not implemented in class {{className}}",
    "unknownIndicatorStatus": "Unknown indicator state: {{status}}",
    "badValue": "Incorrect value",
    "arrayCantBeEmpty": "Array can not be empty",
    "arrayItemCantBeEmpty": "One of array elements is not filled",
    "notSet": "Not defined",
    "notSpecified": "Not specified",
    "valueCalcAfterRecordSaved": "Value is calculated after saving record ",
    "removeFromList": "Remove from list",
    "noDisplayData": "Data for display do not exist",
    "itemsCount": "Elements on page",
    "noRecords": "Records do not exist",
    "notImplementedBuildTabletKeyInClass": "Method buildTabletKey of {{className}} is not defined",
    "recordShouldBeSaved": "Record should be saved",
    "cantDeleteLastTimeInterval": "Last actual time interval can not be deleted",
    "confirmDeleteRecord": "Are you sure that you want to delete selected time interval for the record?",
    "removeRecordTimeInterval": "Remove Record Time Interval",
    "confirmRestoreVersion": "Are you sure that you want to restore selected time interval for the record?",
    "restoreRecordTimeInterval": "Restore Record Time Interval",
    "confirmCancelCreateTimeInterval": "Are you sure that you want to cancel creating actual time interval?",
    "cancelCreateTimeInterval": "Cancel actual time interval",
    "confirmCancelEditTimeInterval": "Are you sure that you want to leave time interval? Changes will be lost",
    "recordNotClassified": "Record is not classified",
    "records": "Records ",
    "more": "...more {0}...",
    "codeAttributeMissing": "Code attribute does not exist in section of record CodeAttributes",
    "codeAttributeCanOnlySimpleDataType": "Code attribute can be only simpleDataType",
    "displayRecordError": "Record displaying error",
    "diff.valuechanged": "Value is changed",
    "diff.valuedeleted": "Value is deleted",
    "diff.newvalue": "New value"
  },
  "cluster": {
    "merge.success": "Consolidation is successfully completed",
    "merge.previewLoadFailed": "Failed to preview consolidation result",
    "merge.recordsCount_0": "For consolidation it is available {{count}} record (total: {{total}})",
    "merge.recordsCount_1": "For consolidation it is available {{count}} records (total: {{total}})",
    "merge.recordsCount_2": "For consolidation it is available {{count}} records (total: {{total}})",
    "merge.action": "Merge records",
    "searchBy": "Search by",
    "records": "Records",
    "byRule": "Rule",
    "searchDuplicateGroups": "Duplicate search rules",
    "ofCluster": "Cluster",
    "notSetEtalonIds": "EtalonIds are not set",
    "notSetMetaRecord": "MetaRecord or entityName / entityType is not set",
    "consolidationResult": "Consolidation result",
    "openWinnerRecord": "Open main record",
    "recordNotUpload": "Record is not loaded",
    "excludeRecord": "Excluding record",
    "confirmExcludeRecord": "Are you sure that you want to exclude record from cluster?",
    "confirmRemoveRecordFromDisplay": "Are you sure that you want to remove record from display?",
    "cantLoadRecord": "Can not load record",
    "cantExcludeRecord": "Can not exclude record from cluster",
    "loadDataError": "Error in loading record data",
    "firstRecord": "First record",
    "lastRecord": "Last record",
    "nextRecord": "Next record",
    "prevRecord": "Previous record",
    "cluster": "Cluster",
    "openRecord": "Open record",
    "viewCluster": "Cluster display screen",
    "loadClusterListError": "Failed to load cluster list",
    "results": "Results",
    "addSomeOneRecord": "Please add at least one record for consolidation",
    "selectEntityOrLookupEntity": "- select entity / lookup entity -",
    "recordCount": "ÐÐ°Ð¿Ð¸ÑÐµÐ¹"
  },
  "admin.common": {
    "dataSaveSuccess": "$t(glossary:saveDataSuccess)!",
    "loadDependencyGraphError": "Error in loading graph of rights consistency",
    "inputPorts": "Input ports",
    "displayed": "Displayable",
    "selectAll": "Select all",
    "interface": "Interface",
    "identifier": "Identifier",
    "defaultSelect": "- select {{entity}} -",
    "noRecords": "- records do not exist -",
    "selectEntityOrLookupEntity": "- select entity / lookup entity -"
  },
  "admin.audit": {
    "operationId": "Operation identifier",
    "creationDate": "Creation data",
    "after": "After",
    "to": "To",
    "details": "Details",
    "originId": "Original record identifier",
    "etalonId": "Master record identifier",
    "externalId": "External id",
    "taskId": "Task identifier",
    "serverIp": "Server IP",
    "clientIp": "User IP",
    "subSystem": "Subsystem",
    "decline": "Declined",
    "accept": "Accepted",
    "createdUser": "User is created",
    "updatedUser": "User is updated",
    "userLogin": "User login",
    "userLogout": "User logout",
    "changeRecord": "Record change",
    "mergeRecords": "Record merging",
    "getRecord": "Record receiving",
    "getFewRecord": "Few records receiving",
    "workflows": "Workflows",
    "dataHandling": "Data handling",
    "authorization": "Authorization",
    "security": "Security",
    "eventType": "Event type",
    "initiator": "Initiator"
  },
  "admin.cleanseFunction": {
    "workingAreaSize": "Working area size",
    "addNewFunction": "Add new function",
    "loadFunction": "Load function",
    "editFunction": "Edit function",
    "executionResult": "Execution result",
    "outputPortNotFound": "Output port \"{{portName}}\" is not found",
    "unknownActionFor": "Unknown action is performed for:",
    "uploaded": "Uploaded",
    "thirdPartyFunction": "{{action}} third-party function \"{{name}}\"",
    "newFunction": "New function",
    "composite": "Composite",
    "thirdParty": "Third-party",
    "attention": "Attention! ",
    "errorFunctionLoading": "Error when loading a function",
    "functionRemovalWarning": "Function will be removed from published data model version",
    "confirmDeleteFunction": "Are you sure that you want to delete function?",
    "loadThirdPartyFunction": "Loading third-party function  <b>{cleanseFunctionName}</b>",
    "pressButtonUploadJarFile": "Please press button to upload jar-file",
    "selectFileOfCorrectType": "Please select the correct file type ({{correctTypes}})",
    "callFunctionError": "Error occurred in applying function",
    "foundDuplicate": "Duplicate is found",
    "confirmRestarDuplicatedFunction": "Duplicate of function {{name}} is found . Are you sure that you want to rerecord it?",
    "invalidFunctionName": "Uploaded function name ({{loadedName}}) is different from required name ({{requiredName}})",
    "noFunctionsInFile": "Functions in file do not exist.",
    "functionSaveError": "Function is not saved or not selected!",
    "back": "Turn back",
    "editPorts": "Port editing",
    "createPorts": "Port creation",
    "portNumber": "Port number",
    "condition": "Condition",
    "inputPort": "Input port",
    "outputPort": "Output port",
    "portName": "Port name",
    "portType": "Port type",
    "required": "Required",
    "port": "Port",
    "saveCompositeFunctionError": "Error in saving composite cleanse function",
    "uploadFunctionSuccess": "Function - {{name}} is successfully uploaded",
    "new": "New ",
    "duplicate": "Duplicate",
    "owerwrite": "Updated",
    "checkRequirePortError": "Error in port validation",
    "cantSaveCircularFunction": "Unable to save circular function",
    "invalidFunction": "Function {{name}} in invalid",
    "notEqualDataTypes": "Data types do not match!"
  },
  "admin.scheme": {
    "resetLocation": "Reset location",
    "displayNestedEntities": "Display nested entities",
    "expandedDataInfo": "Expanded information about relations",
    "defaultScale": "Scale by default"
  },
  "admin.duplicates": {
    "changesWillBeCanceled": "All changes will be canceled",
    "confirmLeaveUnsavedEntity": "$t(admin.duplicates>changesWillBeCanceled) Do you want to edit rules of another entity?",
    "confirmLeaveUnsavedRule": "$t(admin.duplicates>changesWillBeCanceled) Do you want to edit another rule?",
    "confirmAddNewRule": "$t(admin.duplicates>changesWillBeCanceled) Do you want to add new rule?",
    "rules": "Rules",
    "ruleSettings": "Rule settings",
    "excludeRuleFromGroup": "Exclude rule from group",
    "removeGroup": "Remove group",
    "addGroup": "Add group",
    "confirmRemoveGroup": "Are you sure that you want to remove group?",
    "confirmRemoveRule": "Are you sure that you want to remove rule?",
    "unknownRule": "Unknown rule",
    "groupWithNameExists": "Group with this name already exists",
    "removingRule": "Removing rule",
    "editRuleGroups": "Editing rule groups",
    "moveRule": "Moving rules",
    "addAlgorithm": "Add algorithm",
    "ruleHasntAlgorithms": "In rule algorithms are not set",
    "ruleIncorrect": "Rule is incorrect",
    "ruleWithNameExists": "Rule with this name already exists",
    "ruleSaveSuccess": "Rule is successfully saved",
    "removeFields": "Remove field sets",
    "confirmRemoveMatchingAlgorithm": "Are you sure that you want to remove match algorithm?",
    "ruleGroups": "Rules groups",
    "exportRules": "Export rules",
    "importRules": "Import rules",
    "duplicateSearchRulesImport": "Duplicate search rules import",
    "rulesSuccessImported": "Rules are successfully imported",
    "groupAutoMerge": "Merge automatically"
  },
  "admin.metamodel": {
    "customProperties": "Custom properties",
    "catalogTitle": "Entity / lookup entity catalog",
    "rootCatalogCantBeRemoved": "Root catalog can't be removed",
    "catalogCantBeRemoved": "Can't remove group. Group is used in entities/lookup entities.",
    "catalogRemovalNotPossible": "Can't remove group {{group}}: group is used in entities / lookup entities {{lookups}}.",
    "addCatalogItem": "Add catalog item",
    "catalogSavedSuccess": "Catalog is successfully saved!",
    "groupNameShouldUnique": "Group name should be unique",
    "edit": "Edit",
    "loadProcess": "Loading",
    "confirmCloseUnsavedModel": "Are you sure that you want to close unsaved model?",
    "removeEntityOrLookupEntity": "Remove entity / lookup entity",
    "recordDisplay": "Record display",
    "model": "Model",
    "consolidation": "Consolidation",
    "invalidPropertySettings": "Property settings are invalid",
    "unefinedCodeAttribute": "Code attribute is not definied",
    "invalidRelations": "Relations are incorrect",
    "invalidConsolidationSettings": "Consolidation settings are invalid",
    "complexAttributeAlreadyExists": "Complex attribute with this name already exists",
    "invalidDataQuality": "Data qulity setttings are incorrect",
    "notSetDisplayedAttribute": "Displayable attribute is not selected",
    "notSetMainDisplayedAttribute": "Main displayable attribute is not selected",
    "netSetSearchAttribute": "Search attribute is not selected",
    "attributeNamesNotUnique": "Attribute names are not unique",
    "selectTypeRule": "Please select one of rule types",
    "notSetUserMessage": "User message text is not specified",
    "requiredPortsInvalid": "Ports are set incorrectly",
    "notSetDataSource": "Data source is not selected",
    "entityOrLookupEntityWithNameExists": "Entity or lookup entity with this name exists",
    "removingEntityOrLookupEntity": "Removing entity / lookup entity",
    "confirmRemoveEntityOrLookupEntity": "Are you sure that you want to remove entity / lookup entity?",
    "new": "New",
    "addSimpleAttribute": "Add new attrubute",
    "mask": "Mask",
    "maskTooltip.description": "Special signs for masking one character",
    "maskTooltip.number": "Number",
    "maskTooltip.capitalLetter": "Capital letter",
    "maskTooltip.lowercaseLetter": "Lowercase letter",
    "maskTooltip.alphanumeric": "Letter / number",
    "maskTooltip.regexp": "Regular expression",
    "unique": "Unique",
    "readOnly": "Read-only",
    "hidden": "Hidden",
    "insertEntityKey": "Key of inserted entity",
    "measuredValue": "Measured value",
    "searchable": "Searchable",
    "displayable": "Displayable",
    "mainDisplayable": "Main displayable",
    "delimeter": "Delimeter",
    "buildRendererFunctionBadStore": "Incorrect store is rendered into method buildRendererFunction",
    "attributeNameShouldBeUnique": "Attribute name should be unique on a level",
    "childAttributesCantBeRequired": "Child attributes can not be required",
    "attributeUsesInQualityRules": "Attribute is used in quality rules",
    "attributeUsesInSearchDuplicatesRules": "Attribute is used in duplicate search rules",
    "attributeUsesInLookupEntityList": "Attribute is used in lists of displayable attributes of lookup entity",
    "attributeUsesInRelationsList": "Attribute is used in lists of displayable attributes of relations",
    "attributeUsesInConsolidationSettings": "Attribute is used in consolidation settings",
    "attributeUsesInAttributesGroup": "Attribute is used in attributes group",
    "confirmRemoveAttribute": "Are you sure that you want to remove attribute?",
    "incorrectEntityDependencyFormat": "Incorrect format of entityDependency",
    "createGroup": "Create group",
    "moveAttribute": "Attribute moving",
    "addCol": "Add column",
    "removeEmptyCols": "Remove empty columns",
    "attributesGroup": "Attribute groups",
    "groupNaming": "Group name",
    "setGroupNaming": "Please enter group name",
    "move": "Moving",
    "removeAttributeGroup": "Removing attribute group",
    "byDataSources": "By data source",
    "weight": "Weight",
    "byAttributes": "By attributes",
    "takeFirstValue": "Take first value",
    "takeLastValue": "Take last value",
    "string": "String",
    "integer": "Integer",
    "number": "Number",
    "const": "Constant",
    "selectNewPosition": "Select new position",
    "order": "Order",
    "functionName": "Function name",
    "common": "Common",
    "ruleProperty": "Rule properties",
    "ruleName": "Rule name",
    "ruleSettings": "Rule settings",
    "function": "Function",
    "enrich": "Enrichment",
    "uses": "Use",
    "masterData": "Master data",
    "outputPorts": "Output ports",
    "makeErrorOnBase": "Make error on base",
    "handleDataPhase": "Data handling phase",
    "messageText": "Message text",
    "userCriticalness": "User criticalness",
    "enrichMasterData": "Master data enrichment",
    "fixErichChanges": "Fix changes in enrichment",
    "changeEntity": "Change available entity",
    "createNewEntity": "Create available entity",
    "codeAttributeCantUseForOutputPort": "Code attribute can not be used for output port",
    "incompatibilityPortType": "Incompatibility of port type: ({{portDataType}}, {{recordType}})",
    "port": "port:",
    "userMessageText": "User message text",
    "userCategory": "User category",
    "allSystems": "All systems",
    "selectDataSource": "Select data source",
    "fixChangesMethodNotSpecified": "Change fixation method is not specified",
    "sourceNotSpecified": "Source is not specified",
    "requiredAttributeCantBeHidden": "Required attribute can not be \"Hidden\" or \"Read-only\"",
    "entityDescription": "Entity description",
    "entityType": "Entity type",
    "advanced": "Advanced",
    "displayStatsForDataOperator": "Dashboard",
    "historySupport": "History support",
    "watchAttributeChanges": "$t(admin.metamodel>historySupport) View attribute changes",
    "watchRecords": "$t(admin.metamodel>historySupport) View all records ",
    "rangeSupport": "Range support",
    "rangeCompareGranularity": "Range comparison granularity",
    "second": "Second",
    "minute": "Minute",
    "hour": "Hour",
    "day": "Day",
    "timeIntervalBoundaries": "Boundaries of actual time intervals",
    "selectEntityTimeInterval": "Selection of boundaries of actual time intervals for this entity",
    "changeTimeIntervalNotAvailable": "Change of time intervals is not available",
    "changeRelationType": "Relation type change",
    "confirmChangeRelationTypeToOn": "Are you sure that you want to change relation type to \"Contains\"? All relation attributes will be removed",
    "selectRelationName": "Enter relation name",
    "selectDisplayedRelationName": "Enter displayable relation name",
    "selectRelatedEntity": "Select related entity...",
    "nestedEntity": "Nested entity",
    "notNamed": "Not named",
    "removeRelation": "Relation remove",
    "confirmRemoveRelation": "Are you sure that you want to remove relation?",
    "whereLook": "Search in",
    "whereFound": "Found in",
    "value": "Value",
    "totalFound": "Total found: {totalCount}",
    "logicName": "Logic name",
    "relationLogicName": "Logic relation name",
    "attributeRelationLogicName": "Logic name of relation attribute ",
    "displayedName": "Displayable name",
    "relationDisplayedName": "Displayable relation name",
    "attributeRelationDisplayedName": "Displayable name of relation attribute",
    "props_description": "Properties ({{description}})",
    "relations_description": "Relations ({{description}})",
    "dataQuality_description": "Data quality ({{description}})",
    "ruleDescription": "Rule description",
    "modelSearch": "Search by data models",
    "confirmLeaveUnsavedModel": "Are you sure that you want to leave unsaved model?",
    "selectOperation": "Selecting operation ",
    "metaModelProperty": "Edit catalog structure",
    "addEntityOrLookupEntity": "Add entity / lookup entity",
    "emptyResultSet": "Search results do not exist",
    "selectObjectType": "Object type selecting",
    "exportMetamodel": "Metamodel export",
    "confirmExportFullMetamodel": "Are you sure that you want to export full metamodel?",
    "updateDataError": "Data updating error. Please restart application ",
    "advancedImport": "Advanced import",
    "baseImport": "Base import",
    "entitiesWithAllRelations": "Entities and lookup entities with all relations",
    "entitiesOnly": "Only entities and lookup entities",
    "exportDescription": "After confirmation export process will start. Result will be available in notifications.",
    "startExportProcess": "Export process is set.",
    "importPorcessDescription": "After confirmation import process will start and system will be unavailable till its completing.",
    "importCounter": "Items will be imported: {{checkedCount}} from {{importCount}}",
    "startImportProcess": "Import process is set.",
    "importMetadata": "Metadata import...",
    "importError": "Import error",
    "importSuccess": "Import is successfully completed.",
    "importWillDropDraft": "Data model import will drop the current draft",
    "refreshCache": "Cache updating...",
    "notSelected": "Not selected",
    "warnings": "Warnings",
    "updatable": "Updatable",
    "cantImport": "Can not import",
    "exists": "Existed",
    "nestedEntities": "Nested entities",
    "measure": "Measure",
    "compositeFunctions": "Composite functions",
    "searchDuplicateRules": "Duplicates search rules",
    "recordMergeRules": "Record merging rules",
    "halfRelationsWillNotChanged": "Half relations will not be changed: {{warningCount}}",
    "notSelectedNeededRelations": "Required relations are not selected: {{errorCount}}",
    "usesIn": "Used in:",
    "importedData": "Imported data:",
    "updateFilter": "Update filtration",
    "switchMode": "Switch mode",
    "relatedFrom": "Related from:",
    "selectProperly": "Select file of correct type (zip)",
    "selectFile": "Select {{extension}} file",
    "importModel": "Model import",
    "metaModelSuccessfully": "Metamodel is successfully {{action}}",
    "recreated": "recreated",
    "updated": "updated",
    "notInSystemButInImportData": "Does not exist in system but in imported data",
    "inSystemAndInImportData": "Exists in system and in imported data",
    "notInSystemAndNotInImportData": "Does not exist in system and in imported data",
    "inSystemButNotInImportData": "Exists in system and does not exist in imported data",
    "newCount": "New: {{newCount}}",
    "updateCount": "Will be updated: {{updateCount}}",
    "notFoundCount": "Not found: {{notfoundCount}}",
    "existsCount": "Existed: {{existCount}}",
    "checkedAndImportCount": "Selected items to import: {{checkedCount}} from {{importCount}}",
    "update": "Updating",
    "notFound": "Not found",
    "existsInSystem": "Exists in system",
    "badAttributes": "Attributes are incorrect",
    "overrideModelByImported": "Recreate (current model will be completly removed and changed by imported one)",
    "overrideSameNameOperations": "Operations with the same name will be overridden",
    "nestedEntityName": "Nested entity name",
    "selectLeastOneRuleType": "Please select at least one rule type",
    "displayedAttributes": "Displayable attributes",
    "main": "Main",
    "periodStart": "Period start",
    "periodEnd": "Period end",
    "properties": "Properties",
    "jsonModel": "JSON model of current entity",
    "nestedEntityKey": "Nested entity key",
    "type": "Type",
    "oneMeasuredValue": "Measured value",
    "selectUnit": "Unit",
    "enumeration": "Enumeration",
    "attributeType": "Attribute type",
    "allErrors": "All errors",
    "filter": "Filter",
    "baseEntity": "- base entity - ",
    "phase": "Phase",
    "action": "Action",
    "required": "Required",
    "coded": "Coded",
    "codedAlternate": "Coded alternate",
    "key": "Key",
    "min": "Minimum",
    "max": "Maximum ",
    "presentation.relation.noRelationGroups": "no relations",
    "attributeGroupSettings": "Attribute groups settings",
    "relationSettings": "Relation order settings",
    "importPrev": "Previous",
    "importNext": "Next",
    "selectEntityOrLookupEntity": "- select entity / lookup entity -",
    "messageTextRequired": "This field is required",
    "inputPortRequired": "Port is required",
    "fileFormat": "File type: {{type}}",
    "selectFileOfCorrectType": "Please select the correct file type ({{correctTypes}})",
    "importOrExportMetaModel": "Import / export data model"
  },
  "admin.enumeration": {
    "import": "Unit import",
    "export": "Unit export",
    "remove": "Remove measure",
    "selectAll": "Select all measures"
  },
  "admin.job": {
    "operationNotSaved": "Operation is not saved",
    "confirmChangeOperation": "All unsaved data will be lost. Are you sure that you want to switch to another operation?",
    "commonSettings": "Common settings",
    "active": "Active",
    "type": "Type",
    "cronExpression": "Cron expression",
    "parameters": "Parameters",
    "maxLengthExceeded": "Maximum length is exceeded {{type}} (maximum length: {{length}})",
    "fieldShouldUnique": "Field should be unique",
    "name": "Name",
    "value": "Value",
    "confirmRemoveOperation": "Do you want to remove operation?",
    "removeOperationSuccess": "Operation is removed!",
    "createOperationSuccess": "Operation is successfully created",
    "saveOperationSuccess": "Operation is successfully saved",
    "operationWithNameExists": "Operation with this name already exists",
    "incorrectExpression": "Incorrect expression",
    "warning": "Warning",
    "execOperationError": "Error in execution operation ",
    "startList": "Start list",
    "stop": "Stop",
    "operationSteps": "Operation steps",
    "operations": "Operations",
    "addNewOperation": "Add new operation",
    "all": "All",
    "actives": "Active",
    "inactives": "Inactive",
    "notImplementedMethodInitInput": "Method initInput is not implemented",
    "startTime": "Start time",
    "endTime": "End time"
  },
  "admin.measurement": {
    "notation": "Notation",
    "transformation": "Transformation",
    "basic": "Basic",
    "loadEnumerationsSuccess": "Units are successfully loaded",
    "removingNode": "Removing node",
    "confirmRemoveMeasuredValue": "Are you sure that you want to remove measured value?"
  },
  "admin.security": {
    "loadDataError": "Data loading error",
    "saveDataSuccess": "$t(glossary:saveDataSuccess)",
    "addNewLabel": "Add new label",
    "labelName": "Label name",
    "displayLabelName": "Displayable label name",
    "removeSecurityLabel": "Security label removing",
    "confirmRemoveSecurityLabel": "Are you sure that you want to remove security label?",
    "removeSecurityLabelSuccess": "Security label is removed.",
    "labelExists": "Security label with this name exists",
    "invalidForm": "Invalid form",
    "attributesNotSet": "Attributes are not set",
    "invalidSymolsInField": "Field contains invalid characters",
    "filledNotAllAttributeNames": "Not all attribute names are filled",
    "attributeNamesShouldBeUnique": "Attribute names should be unique!",
    "filledNotAllAttributeValues": "Not all attribute values are filled",
    "attributeValuesShouldBeUnique": "Attribute values should be unique!",
    "loadRoleError": "Role loading error",
    "addNewRole": "Add new role",
    "roleName": "Role name",
    "unapprovedResourceCounter": "Unapproved resource: {{warningCount}}",
    "additionalRoleProperties": "Additional role properties",
    "expandAll": "Expand all",
    "collapseAll": "Collapse all",
    "resourceName": "Resource name",
    "full": "Full",
    "create": "Creating",
    "read": "Reading",
    "update": "Updating",
    "delete": "Deleting",
    "label": "Label",
    "applied": "Applied",
    "specialGroup": "Special rights",
    "groupedGroup": "Grouped rights",
    "ungroupedGroup": "Ungrouped rights",
    "confirmLeaveUnsavedRole": "Role is not saved. Are you sure that you want to leave editng current role?",
    "saveRole": "Role saving",
    "confirmSaveRoleWithUnapprovedGroups": "Role is not saved. Are you sure that you want to leave editing current role?",
    "roleRemoveSuccess": "Role is removed!",
    "groupsNotApprovedWithEntiry": "Rights are not approved with entity {{name}}.",
    "isRelationWithName": "Relation exists: {{name}}.",
    "typeWithName": "Type: {{name}}",
    "isLink": "Link exists",
    "newRole": "New role",
    "addUser": "Add user",
    "lastName": "Last name",
    "newUser": "New user",
    "external": "External",
    "authorizationMethod": "Authorization method",
    "active": "Active",
    "admin": "Admin",
    "name": "Name",
    "newPassword": "New password",
    "badPassword": "Invalid password",
    "confirmPassword": "Confirm password",
    "passwordsNotMatch": "Passwords do not match!",
    "additionalUserProperties": "User additional properties",
    "paswordCantBeEmpty": "Password can not be empty",
    "confirmPaswordCantBeEmpty": "Password confirmation can not be empty",
    "userSaveSuccess": "User is saved",
    "additionalPropertySettings": "Additional property settings",
    "addNewValueToSecurityLabel": "Add new value to set of conditions of security label"
  },
  "admin.sourcesystems": {
    "confirmLeaveUnsavedSourceSystem": "Are you sure that you want to leave unsaved data source?",
    "addSourceSystem": "Add data source",
    "weight": "Weight",
    "incorrectFields": "Incorrect fields",
    "weightUsedInAnotherSourceSystem": "Weight is used in another data source",
    "incorrectWeight": "Incorrect weight",
    "removeSourceSystem": "Data source removing",
    "confirmRemoveSourceSystem": "Are you sure that you want to remove data source?",
    "newSourceSystem": "New data source"
  },
  "admin.topsecrets": {
    "logs": "logging",
    "system": "System",
    "systemPanel": "System admin panel",
    "loadLogs": "Load logs"
  },
  "workflow": {
    "after": "After",
    "task": "Task",
    "by": "By",
    "processState": "Process state",
    "processType": "Process type",
    "process": "Process",
    "triggerCondition": "Trigger Ñondition",
    "saveDataError": "Data saving error",
    "noChanges": "No changes",
    "startProcessForAllChanges": "Start process for all changes",
    "startProcessIfVersionConflict": "Start process if there is version conflict from different source systems",
    "taskName": "Task name",
    "taskDescription": "Task description",
    "taskAuthor": "Task author",
    "taskCreateDate": "Date of task creating ",
    "taskStatus": "Task status",
    "taskAssegnee": "Task executor",
    "processCreateDate": "Date of process creating",
    "toCommonTasks": "To common tasks",
    "takeTask": "Take task",
    "confirmTakeTask": "Are you sure that you want to take task?",
    "confirmToCommonTasks": "Are you sure that you want to convert task to common ones?",
    "attachments": "Attachments",
    "addAttachment": "Add attachment",
    "comment": "Comments",
    "addComment": "Add comment",
    "processHistory": "Process history",
    "tasksearch.history": "Search by history",
    "tasksearch.title": "Search",
    "tasksearch.commonTasks": "Common tasks",
    "tasksearch.inProcess": "In process",
    "tasksearch.taskNumber": "Task number",
    "tasksearch.initiator": "Approve initiator",
    "tasksearch.approvePeriod": "Time period of process approval",
    "tasksearch.assignmentPeriod": "Time period of task value ",
    "tasksearch.searchHistory": "Search by task history",
    "tasksearch.completedBy": "Executor",
    "tasksearch.taskCompletePeriod": "Time period of completing task",
    "tasksearch.noData": "No data",
    "tasksearch.loadError": "Record loading error",
    "tasksearch.noAccessToRecord": "You have no access or you have no rights to process it",
    "tasksearch.taskId": "Task ID",
    "tasksearch.recordName": "Record name",
    "tasksearch.createDate": "Date of creating",
    "tasksearch.finishDate": "Date of finishing"
  },
  "classifier": {
    "createdClassifierNode": "Classifier node is created",
    "updatedClassifierNode": "Classifier node is updated",
    "removedClassifierNode": "Classifier node is removed",
    "cantExecClassifierNodeOperation": "Can not execute operation for classifier nodes ",
    "saveSettingsSuccess": "Classifier settings are saved",
    "saveSettingsFailure": "Failed to save classifier settings",
    "removeClassifierSuccess": "Classifier is successfully removed",
    "removeClassifierFailure": "Failed to remove classifier",
    "validationErrorNodeNotSaved": "Validation error",
    "codePatternOptions": "Code pattern options",
    "patternExplanation": "Character \"x\" means position for number.<br> Delimiters of tree levels are characters \"dot (1), \"space\" (2) at the corresponding positions or direct position indication (character \"plus\").",
    "classifierNodes": "Classifier nodes",
    "noClassifierNodes": "No classifier nodes",
    "addNestedNode": "Add nested node",
    "removeNode": "Removing node",
    "confirmRemoveNode": "Are you sure that you want to remove classifier node?",
    "haveRecordsClassifiedByNode": "Records classified by node exist!",
    "removeClassifier": "Classifier removing",
    "confirmRemoveClassifier": "Are you sure that you want to remove classifier?",
    "checkValues": "Check value accuracy",
    "newClassifier": "New classifier",
    "readOnly": "Read-only",
    "restoreAttribute": "Restore attribute",
    "confirmRemoveAttribute": "Are you sure that you want to remove attribute?",
    "value": "Value",
    "notSet": "Not specified",
    "notSelectType": "Type is not selected",
    "notSelectEnum": "Enum is not selected",
    "notSelectLookup": "Lookup is not selected",
    "nameNotUnique": "Name is not unique",
    "attributeContainer": "Attribute container",
    "newClassifierNode": "New classifier node",
    "exportClassifier": "Export classifier",
    "createNewClassifier": "Create new classifier",
    "refreshClassifiersList": "Update classifier list",
    "noData": "No data",
    "importBy": "Import by",
    "byCode": "By code",
    "importProcess": "Classifier import process is successfully set.",
    "exportProcess": "Classifier export process is successfully set.",
    "exportProcessError": "Error in starting classifier export process",
    "codePattern": "Code pattern",
    "attributeType": "Attribute type",
    "enums": "Enumeration",
    "type": "Type",
    "lookupEntity": "Lookup entity",
    "example": "Example",
    "havePersonalAttrs": "Personal attributes exist",
    "classification": "Classification",
    "classifiedRecordsNotExists": "Classified records do not exist",
    "selectNoRecords": "- no records -",
    "ofRecords": "records",
    "loadClassifiersError": "Classifier loading error",
    "selectClassifierNode": "Selecting classifier node",
    "selectSearchAttribute": "- attribute search -",
    "selectAttribute": "- attribute -",
    "selectClassifier": "- select classifier - ",
    "selectNode": "- classifier node - ",
    "selectValue": "- select value - ",
    "searchNode": "...node search..."
  },
  "menu": {
    "menu": "Menu",
    "dataProcessing": "Data processing",
    "home": "Home",
    "data": "Data",
    "classifier": "Classification",
    "dataManagement": "Data management",
    "dataModel": "Data model",
    "duplicates": "Duplicate settings",
    "schema": "Data schema",
    "admin": "Administrating",
    "operations": "Operations",
    "process": "Workflows",
    "log": "Log",
    "about": "About system",
    "exit": "Exit",
    "changePassword": "Change password",
    "tasks": "Tasks",
    "user": "User",
    "attach": "Attach",
    "version": "Software version",
    "backendVersion": "Backend Version",
    "buildDate": "Data building",
    "source": "Source",
    "date": "Date",
    "licenseVersion": "License version",
    "licenseDate": "License is valid until",
    "accessDeniedToAdminPanel": "You have insufficient login rights to administration panel",
    "backendProperties": "Platform parameters"
  },
  "relation": {
    "includeType": "Relations type of  \"contains\"",
    "manyToMany": "Relations type of many-to-many",
    "referenceType": "Relations type of  \"reference\"",
    "includeTypeError": "Error in loading contains relation",
    "removeTimeIntervalSuccess": "Time interval is removed",
    "removeTimeIntervalFailure": "Failed to remove time interval",
    "saveRelationError": "Relation saving error",
    "saveRelationSuccess": "Relation is saved",
    "removeRelationSuccess": "Relation is moved",
    "switchRelationType": "Switch relation type",
    "loadManyToManyRelationError": "Error in loading many-to-many relation",
    "from": "From",
    "to": "To",
    "valueUsesInAnotherRelation": "Value is used in another relation",
    "invalidRelationForm": "Invalid relation form ",
    "saveRelationSuccessfully": "Relation is successfully saved.",
    "noRelationAttributes": "Relation attributes do not exist",
    "records": "Records",
    "ofRecords": "records",
    "relationNotSet": "Relation is not set",
    "validity": "Validity",
    "attributeValuesNotSet": "Attribute values are not set",
    "approveRelation": "Relation is under approval",
    "noReferenceDataError": "Data for reference relation is not found"
  },
  "model": {
    "attribute.typeShouldSpecified": "Attribute type should  be specified",
    "job.statusUnknown": "Unknown",
    "job.statusAbandoned": "Abandoned",
    "job.statusComplete": "Completed",
    "job.statusStarted": "Starting",
    "job.statusStarting": "Start",
    "job.statusStopped": "Stopped",
    "job.statusStopping": "Stopping",
    "job.statusWait": "Waiting",
    "simpleFunction": "Simple function",
    "compositeFunction": "Composite function",
    "customFunction": "Custom function",
    "low": "Low",
    "normal": "Normal",
    "high": "High",
    "critical": "Critical",
    "beforeSaveData": "Before master data saving",
    "afterSaveData": "After master data saving",
    "actionShouldSelect": "Action should be selected",
    "dataHandlePhaseShouldSelect": "Data handling phase should be selected",
    "criticalFemale": "Critical",
    "highFemale": "High",
    "normalFemale": "Normal",
    "lowFemale": "Low",
    "portShouldSelect": "Port of creating error should be selected",
    "phaseShouldSelect": "Data handling phase should be selected",
    "fieldcriticalnessRequired": "Field \"Criticalness\" shoud be specified",
    "shouldSelectFunction": "Function should be selected",
    "groupRequired": "Group should be filled",
    "invalidSourceType": "Type \"sourceType\" is incorrect",
    "invalidTargetType": "Type \"targetType\" is incorrect",
    "operationNameRequired": "Operation name is not specified",
    "operationNameTooShort": "Length of operation name should be not less than 2 characters",
    "operationTypeRequired": "Operation type is not specified",
    "actionComplete": "Action is completed",
    "actionError": "Action error",
    "takeTaskError": "Error in taking task",
    "returnTaskError": "Error in returning task",
    "loadTaskError": "Error in task loading",
    "codeNameRequired": "Code name should be specified ",
    "displayNameRequired": "Displayable name should be specified "
  },
  "util": {
    "active": "Active",
    "inactive": "Inactive",
    "merged": "Does not participate in consolidation",
    "noDataToday": "No data for today",
    "newRecord": "New record",
    "unknownError": "Unknown error occured",
    "internalError": "Server internal error occured",
    "error.unknownServerError": "Unknown server error",
    "startOperationError": "Error in starting operation",
    "stopOperationError": "Error in stopping operation",
    "startStopOperationError": "Error in starting / stopping operation",
    "enum": "Enumeration",
    "lookupEntity": "LookupEntity",
    "link": "Link",
    "removedComponentState": "Component state for non-existent entity / lookup entity is removed.",
    "invalidFieldValue": "Invalid field value",
    "supportMessage": "Click Ctrl+C to copy debugging information. Please send coped message to system admin",
    "applicationError": "Application error. Please contact developers.",
    "errorDetails": "Error details",
    "errorCode": "Error code",
    "noRelationReferenceData": "Relation data type of reference do not exist",
    "message": "Message",
    "recordId": "Record ID"
  },
  "application": {
    "maintenanceMode": "System is in maintenance mode...",
    "error.loadExternalDeps": "Failed to load external dependencies",
    "error.mergeRecordDisplayCountShouldInt": "Parameter MERGE_RECORD_DISPLAY_COUNT should be numeral",
    "error.mergeRecordDisplayCountShouldInRange": "Parameter MERGE_RECORD_DISPLAY_COUNT should be in range from {{min}} to {{max}}",
    "error.invalidAppModeParameter": "Parameter APP_MODE has incorrect value",
    "error.notSetAppModeParameter": "Parameter APP_MODE is not set",
    "error.unknownServerError": "Unknown server error occured",
    "error.occurredAuth": "Authentification error occured",
    "error.auth": "Authentification error ",
    "error.access": "Access error",
    "error.license": "License error",
    "error.invalidLicense": "License for platform Unidata is invalid",
    "error.serverConnection": "Server connection error",
    "error.internalServerError": "Internal server error occured",
    "error.unsupportedRequest": "Error. Request is not supported on server",
    "error.urlNotFound": "Error. Incorrect API URL",
    "error.customerJsonParseError": "Failed to parse file customer.json",
    "error.customerDedAddonsHandleFailure": "Failed to handle CUSTOMER_DED_ADDONS",
    "error.customerDedAddonsHandlerHandleFailure": "Failed to handle CUSTOMER_DED_ADDONS_HANDLER",
    "realScale": "Scale should be equal to 100%",
    "notifier.newTasks": "New tasks: {0}",
    "notifier.goToTasks": "Go to tasks",
    "noNotifications": "No notifications",
    "removeNotification": "Notifications removing",
    "confirmRemoveNotification": "Are you sure that you want to remove all notifications?",
    "initialize": "Initialization",
    "initializeError": "Data initialization error. Please try again.",
    "confirmLeaveUnsavedSection": "Are you sure that you want to leave section with unsaved records? Changes will be lost."
  },
  "other": {
    "maxOpenTabs": "Number of open tabs can not exceed: {0}",
    "closeAllModalsForIdSearch": "You should close all modal windows for ID search",
    "loadTaskCounterError": "Error in loading task counter",
    "confirmLeaveUnsavedRecord": "Are you sure that you want to leave unsaved record?",
    "confirmCloseUnsavedRecord": "Are you sure that you want to close unsaved record?",
    "warningCalledBaseMethod": "ATTENTION: base method UI UE {{method}} is called. It is necessary to redefine this method in implementation",
    "invalidStateCfgs": "Array stateCfgs has not enough elements",
    "manualMergeRecords": "Merge records (manually)",
    "mergeRecordsClusterCounter": "Merge records (clusters: {{count}}",
    "noDisplayAttributes": "No displayable attributes",
    "allowAll": "All is allowed",
    "unknownError": "Unknown error occured",
    "maxFileSize": "Maximum file size: {{max}} {{current}}",
    "minFileSize": "Minimum file size: {{min}} {{current}}",
    "more": "...more {{count}}...",
    "warningFewActiveCallbacks": "% cUI UE CallbackProvider: several active callbacks with type {{type}} are registered. First found one is applyed.",
    "warningFewActiveCallbackInspectors": "%cUI UE CallbackProvider: several {{provider}} active callback-interceptor with type {{type}} are registere.",
    "removed": "Removed",
    "downloadResult": "Download result",
    "confirmRemoveRecords": "Attention! Removed records can not be restored.",
    "selectSourceSystem": "- source system - "
  },
  "component": {
    "form.field.gridvalues.apply": "Apply",
    "form.field.gridvalues.cancel": "Cancel",
    "form.field.gridvalues.delete": "Delete",
    "form.field.gridvalues.enterValue": "Enter value",
    "form.field.gridvalues.givenValues": "Given values: {0}"
  },
  "backendProperties": {
    "propertiesPanelTitle": "Platform configuration properties",
    "unsupportedPropertyType": "unsupported property type"
  },
  "masonryGrid": {
    "group": "Group",
    "settingsMenu.widget": "Widget",
    "settingsMenu.delete": "Remove",
    "error.notFoundWidget": "Error creating widget",
    "widget.dqerrorsDaily": "Errors count by day",
    "widget.dqerrorsDaily.input.from": "From",
    "widget.dqerrorsDaily.input.to": "To",
    "widget.dqerrorsDaily.input.entities": "All Entities/lookups",
    "widget.dqerrorsDaily.input.severity": "Any severity level",
    "widget.dqerrorsDaily.table.entityName": "Entity/lookup",
    "widget.dqerrorsDaily.table.category": "Category",
    "widget.dqerrorsDaily.table.severity": "Severity",
    "widget.dqerrorsDaily.table.total": "Total",
    "widget.entityStats": "Entity/lookup statistics",
    "widget.tasksAndExport": "Task panel | Statistics export"
  },
  "admin.dq": {
    "dataType.string": "String",
    "dataType.boolean": "Boolean",
    "dataType.date": "Date",
    "dataType.timestamp": "Timestamp",
    "dataType.time": "Time",
    "dataType.number": "Number",
    "dataType.integer": "Integer",
    "dataType.record": "Record",
    "dataType.any": "Any",
    "dataType.unknown": "Unknown",
    "dqRuleTitle": "Data quality rule",
    "dqRuleConfigTitle": "Data quality configuration",
    "enrichConfigTitle": "Enrichment configuration",
    "enrichBySourceSystem": "Save with source system name",
    "sourceSystem": "Source system",
    "selectSourceSystem": "Select source system",
    "dqRuleConfig": "Rule configuration",
    "dqValidationConfig": "Validation configuration",
    "portInput": "Select input",
    "constantInput": "set constant",
    "portAttribute": "Attribute",
    "portPath": "Path",
    "entityNotContainAttribute": "Current entity/lookup doesn't contain attribute with type \"{{dataType}}\".",
    "attributeMustBeSet": "Setting the attbute type is available on \"Attributes\" panel.",
    "portConfig": "Ports configuration",
    "inputPorts": "Inputs",
    "outputPorts": "Outputs",
    "expand": "Expand",
    "collapse": "Collapse",
    "mainConfig": "Main configuration",
    "masterData": "Master data",
    "dqRuleInactiveShort": "Disable",
    "dqRuleActiveShort": "Enable",
    "validation": "Validation",
    "enrichment": "Enrichment",
    "dqRuleActive": "Rule is enabled",
    "dqRuleInactive": "Rule is disabled",
    "validationCannotBeApplied": "Validation cannot be applied for selected function",
    "enrichCannotBeApplied": "Enrichment cannot be applied for selected function",
    "forRuleSave": "Action should be performed befor savig the rule:",
    "selectFunction": "select function",
    "selectFunctionWithBooleanOutputPort": "select function with boolean output",
    "addOutputPort": "add output",
    "addBooleanOutputPort": "add boolean output",
    "runTypeAlwaysShort": "Always",
    "runTypeNeverShort": "Never",
    "runTypeRequiredPresentShort": "Required",
    "runTypeRequiredAllShort": "All required",
    "runTypeAlways": "Always",
    "runTypeRequiredPresent": "Required are present",
    "runTypeRequiredAll": "All required are present",
    "runCondition": "Run condition",
    "portApplicationModeOnce": "Apply fot the first attribute only",
    "dqRulePortHelp.syntax": "Syntax",
    "dqRulePortHelp.examples": "Examples",
    "dqRulePortHelp.filterByValue": "Filter by value",
    "dqRulePortHelp.filterRecordIndex": "Filter by record index",
    "dqRulePortHelp.examples.syntax.line1": "Attribute namse separates with \".\"</br> <b><complex_attribute>.<inner_attribute></b>",
    "dqRulePortHelp.examples.syntax.line2": "<b>[ ]</b> â filter by index",
    "dqRulePortHelp.examples.syntax.line3": "<b>{attribute_name:'attribute_value'}</b> â filter by exact value of inner attribute. Only for complex attributes",
    "dqRulePortHelp.examples.syntax.line4": "<b>{ }</b> - add entire record into input (input type: any)",
    "dqRulePortHelp.example1.title": "{name:'John'}",
    "dqRulePortHelp.example2.title": "Person_Doc.Passports",
    "dqRulePortHelp.example3.title": "Contact{Contact_Type:'home'}",
    "dqRulePortHelp.example4.title": "Ð¡ontact{Email:'company@mail.com'}.Contact_Type",
    "dqRulePortHelp.example5.title": "Person_Doc[2].Doc_Series",
    "dqRulePortHelp.example1": "Select full attribute set \"Name\" with value \"John\" (input type: any)",
    "dqRulePortHelp.example2": "Select attribute set \"Passports\" out of the complex attribute \"Documents\" (all exising values)",
    "dqRulePortHelp.example3": "Select attribute set \"Contacts\" where the inner attribute \"Contact Type\" has value \"Home\" (input type: any)",
    "dqRulePortHelp.example4": "Select inner attribute set \"Contact Type\" out of the complex attribute \"Contacts\" where the attribute Â«EmailÂ» has value \"company@mail.com\"",
    "dqRulePortHelp.example5": "Select attribute set \"Series\" out of the complex attribute \"Documents\" with index 2",
    "executionContext": "Execution context",
    "executionContextMode": "Execution mode",
    "executionContextGlobal": "Global",
    "executionContextLocal": "Local",
    "executionContextGlobalFull": "Execution mode: Global",
    "executionContextLocalFull": "Execution mode: Local",
    "modeAll": "Filter vaues: all",
    "modeAllWithIncomplete": "Filter vaues: all, including incomplete path",
    "modeOnce": "Filter vaues: first only",
    "executionContextModeTitle": "Execution mode configuration",
    "execuionModeNotSet": "not set"
  },
  "admin.dqtest": {
    "launchStepTitle": "Records source",
    "previewStepTitle": "Records selection",
    "resultStepTitle": "Results",
    "existedRecord": "Existing records",
    "sandboxRecord": "User records",
    "sourceSystems": "Source systems",
    "createSandboxDataRecordTooltip": "Create snadbox data record",
    "removeSandboxDataRecordTooltip": "Remove selected",
    "removeSandboxDataRecordTitle": "Sandbox data record removal",
    "removeSandboxDataRecordMessage": "Remove selected sandbox data records?",
    "testDqModeButtonText": "Sandbox",
    "showDqTestWizardButtonText": "Test",
    "plzSelectRecord": "Select record for preview",
    "closeWizard": "Close",
    "mainDisplayableIsUndefined": "Value of displayable is not set",
    "newDataRecord": "New data record",
    "cleanseFunctionNameColumn": "Contains cleanse function",
    "newSandboxDataRecordSuccessSave": "Data record \"{{mainDisplayable}}\" ID: {{etalonId}} has been saved",
    "newSandboxDataRecordSuccessSaveWithoutDisplayable": "Data record ID: {{etalonId}}  has been saved",
    "wizardWindowTitle": "Data quality rules sandbox",
    "wizardWindowExistTitle": "Test sandbox data quality rules on existing records",
    "wizardWindowSandboxTitle": "Test sandbox data quality rules on user records"
  },
  "uiuserexit": {
    "passwordPolicy.incorrectPassword": "Password length must be at least 8 characters, password must contain letters and digits!"
  },
  "ddpickerfield": {
    "displayValueIsEmpty": "Display value is empty",
    "dataRecordDetailWndTitle": "Actual periods detatils",
    "dataRecordDetailCloseBtn": "Close",
    "detail": {
      "column.periodActual": "Actual period",
      "column.calculatedDisplayValue": "Display value",
      "showDeletedPeriodActual": "Show deleted periods",
      "displayAttributes.overriden": "Overriden",
      "displayAttributes.default": "Default",
      "displayType": "Display type"
    },
    "search": {
      "find": "Find",
      "dataRecordSearchWndTitle": "Find related records",
      "dataRecordSearchWndDateAsOfTitle": "Find by date",
      "selectBtnText": "Select",
      "cancelBtnText": "Cancel"
    }
  },
  "metaFormatter": {
    "complex": "complex",
    "array": "array"
  }
}