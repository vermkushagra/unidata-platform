<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                             http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         id="competence" version="3.0">

    <display-name>UniData Backend</display-name>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath:/spring/application.xml
        </param-value>
    </context-param>

    <context-param>
        <param-name>spring.profiles.default</param-name>
        <param-value>default</param-value>
    </context-param>

    <servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring/security.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <url-pattern>/spring/*</url-pattern>
    </servlet-mapping>
    
    <!-- Simon monitoring -->
    <servlet>
        <servlet-name>SimonConsoleServlet</servlet-name>
        <servlet-class>org.javasimon.console.SimonConsoleServlet</servlet-class>
        <init-param>
            <param-name>url-prefix</param-name>
            <param-value>/javasimon-console</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>SimonConsoleServlet</servlet-name>
        <url-pattern>/javasimon-console/*</url-pattern>
    </servlet-mapping>
    
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>

    <servlet>
        <servlet-name>CXFServlet</servlet-name>
        <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>CXFServlet</servlet-name>
        <url-pattern>/api/*</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
        <welcome-file>index</welcome-file>
    </welcome-file-list>


    <filter>
        <filter-name>requestIdFilter</filter-name>
        <filter-class>com.unidata.mdm.backend.util.filter.RequestIdFilter</filter-class>
    </filter>

    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>requestLoggingFilter</filter-name>
        <filter-class>com.unidata.mdm.backend.util.filter.RequestLoggingFilter</filter-class>
        <init-param>
            <param-name>includeQueryString</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>includeClientInfo</param-name>
            <param-value>true</param-value>
        </init-param>
        <!--<init-param>-->
            <!--<param-name>includePayload</param-name>-->
            <!--<param-value>true</param-value>-->
        <!--</init-param>-->
    </filter>

    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter>
        <filter-name>CorsFilter</filter-name>
        <filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
        <init-param>
            <param-name>cors.allowed.origins</param-name>
            <param-value>*</param-value>
        </init-param>
        <init-param>
            <param-name>cors.allowed.methods</param-name>
            <param-value>GET,POST,HEAD,OPTIONS,PUT,DELETE</param-value>
        </init-param>
        <init-param>
            <param-name>cors.allowed.headers</param-name>
            <param-value>Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization,PROLONG_TTL</param-value>
        </init-param>
        <init-param>
            <param-name>cors.exposed.headers</param-name>
            <param-value>Access-Control-Allow-Origin,Access-Control-Allow-Credentials,Content-Disposition,Authorization,PROLONG_TTL</param-value>
        </init-param>
        <!-- TC 9.0.10: It is not allowed to configure supportsCredentials=[true] when allowedOrigins=[*] -->
        <!-- init-param>
            <param-name>cors.support.credentials</param-name>
            <param-value>true</param-value>
        </init-param -->
        <init-param>
            <param-name>cors.preflight.maxage</param-name>
            <param-value>10</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>requestIdFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>requestLoggingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>CorsFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <session-config>
        <session-timeout>-1</session-timeout>
        <cookie-config>
	        <max-age>0</max-age>
	    </cookie-config>
    </session-config>


    <!-- monitoring -->
    <!--<servlet>-->
        <!--<servlet-name>metricsHealthCheckServlet</servlet-name>-->
        <!--<servlet-class>io.dropwizard.metrics5.servlets.HealthCheckServlet</servlet-class>-->
        <!--<load-on-startup>1</load-on-startup>-->
    <!--</servlet>-->
    <!--<servlet-mapping>-->
        <!--<servlet-name>metricsHealthCheckServlet</servlet-name>-->
        <!--<url-pattern>/metrics/HealthCheckServlet</url-pattern>-->
    <!--</servlet-mapping>-->

    <listener>
        <listener-class>com.unidata.mdm.backend.monitoring.PrometheusMetricsServletContextListener</listener-class>
    </listener>

    <servlet>
        <servlet-name>prometheusMetricsServlet</servlet-name>
        <servlet-class>io.prometheus.client.exporter.MetricsServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>prometheusMetricsServlet</servlet-name>
        <url-pattern>/metrics/PrometheusMetricsServlet/*</url-pattern>
    </servlet-mapping>

    <listener>
        <listener-class>com.unidata.mdm.backend.monitoring.DropwizardMetricsServletContextListener</listener-class>
    </listener>
    <listener>
        <listener-class>com.unidata.mdm.backend.monitoring.DropwizardHealthCheckServletContextListener</listener-class>
    </listener>

    <servlet>
        <servlet-name>metricsAdminServlet</servlet-name>
        <servlet-class>io.dropwizard.metrics5.servlets.AdminServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>metricsAdminServlet</servlet-name>
        <url-pattern>/metrics/DropwizardAdminServlet/*</url-pattern>
    </servlet-mapping>
</web-app>