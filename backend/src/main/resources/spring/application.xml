<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xmlns:hz="http://www.hazelcast.com/schema/spring"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd
                           http://www.springframework.org/schema/jee
                           http://www.springframework.org/schema/jee/spring-jee.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util.xsd
                           http://camel.apache.org/schema/spring
                           http://camel.apache.org/schema/spring/camel-spring.xsd
                           http://www.hazelcast.com/schema/spring
                           http://www.hazelcast.com/schema/spring/hazelcast-spring-3.6.xsd
                           http://www.springframework.org/schema/task
                           http://www.springframework.org/schema/task/spring-task.xsd">

    <!-- TODO: remove, if not needed. Clarify. Comment out for now. -->
    <!-- <context:component-scan base-package="com.unidata.mdm.backend.audit"
        /> <context:component-scan base-package="com.unidata.mdm.backend.configuration"
        /> -->
    <context:component-scan base-package="com.unidata.mdm.backend.dao" />
    <context:component-scan base-package="com.unidata.mdm.backend.service" />
    <context:component-scan base-package="com.unidata.mdm.cleanse.postaladdress" />

    <context:spring-configured />
    <context:annotation-config />
    <task:annotation-driven/>

    <util:properties id="backendProperties" location="file:///${unidata.conf}/backend.properties" ignore-resource-not-found="true"/>

    <context:property-placeholder ignore-resource-not-found="true" ignore-unresolvable="true" properties-ref="backendProperties"/>

    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="environment">
            <bean class="org.springframework.web.context.support.StandardServletEnvironment" />
        </property>
    </bean>

    <!-- Hazelcast distributed cache -->
    <hz:hazelcast id="instance">
        <hz:config>
            <hz:group name="${unidata.cache.group:unidata}" password="${unidata.cache.password:password}" />
            <hz:network port="${unidata.cache.port:5701}"
                port-auto-increment="${unidata.cache.port.autoincreament:false}">
                <hz:join>
                    <hz:multicast enabled="${unidata.cache.multicast.enabled:false}"
                        multicast-group="${unidata.cache.multicast.group:224.2.2.3}"
                        multicast-port="${unidata.cache.multicast.port:54327}"
                        multicast-time-to-live="${unidata.cache.multicast.ttl:32}"
                        multicast-timeout-seconds="${unidata.cache.multicast.timeout:2}" />
                    <hz:tcp-ip enabled="${unidata.cache.tcp-ip.enabled:false}">
                        <hz:members>${unidata.cache.tcp-ip.members:127.0.0.1}</hz:members>
                    </hz:tcp-ip>
                    <hz:aws enabled="false" />
                </hz:join>
            </hz:network>

            <!-- No max. users currently. -->
            <hz:map name="tokens"
                backup-count="1"
                read-backup-data="true"
                max-size="0"
                time-to-live-seconds="0"
                max-idle-seconds="${unidata.security.token.ttl:1800}"
                eviction-policy="NONE"
                merge-policy="com.hazelcast.map.merge.PassThroughMergePolicy">
                <hz:near-cache
                    cache-local-entries="true"
                    in-memory-format="OBJECT"
                    max-size="0"
                    time-to-live-seconds="0"
                    max-idle-seconds="${unidata.security.token.ttl:1800}"
                    eviction-policy="NONE"
                    invalidate-on-change="true">
                </hz:near-cache>
            </hz:map>

            <hz:map name="directLinks" backup-count="2" max-size="0"
                    eviction-percentage="30" read-backup-data="true"/>
            <hz:map name="configFingerprint" backup-count="2" max-size="0"
                    eviction-percentage="30" read-backup-data="true"/>
            <hz:map name="revertLinks" backup-count="2" max-size="0"
                    eviction-percentage="30" read-backup-data="true"/>
            <hz:map name="contains" backup-count="2" max-size="0"
                    eviction-percentage="30" read-backup-data="true"/>
            <hz:map name="tempPaths" backup-count="2" max-size="0"
                eviction-percentage="30" read-backup-data="true" eviction-policy="LRU"
                merge-policy="com.hazelcast.map.merge.PassThroughMergePolicy"/>
            <hz:map name="values" backup-count="2" max-size="0"
                      eviction-percentage="30" read-backup-data="true">
                <hz:entry-listeners>
                    <hz:entry-listener class-name="com.unidata.mdm.backend.service.measurement.MeasurementConversionServiceImpl"/>
                </hz:entry-listeners>
            </hz:map>

            <hz:map name="configuration" backup-count="2" max-size="0" eviction-policy="NONE"/>

            <hz:topic name="cleanseTopic"/>
            <hz:topic name="sysStatusTopic"/>
            <hz:topic name="modelDeleteTopic"/>
            <hz:topic name="modelUpsertTopic"/>
            <hz:topic name="wfAssignmentsTopic"/>
            <hz:topic name="matchingRulesTopic"/>
            <hz:topic name="matchingGroupsTopic"/>
        </hz:config>
    </hz:hazelcast>

    <jee:jndi-lookup id="unidataDataSource" jndi-name="jdbc/UniDataDataSource" expected-type="javax.sql.DataSource" />
    <jee:jndi-lookup id="jobDataSource" jndi-name="jdbc/UniDataBatchJobDataSource" expected-type="javax.sql.DataSource"/>
    <jee:jndi-lookup id="wfDataSource" jndi-name="jdbc/UniDataWorkFlowDataSource" expected-type="javax.sql.DataSource"/>

    <import resource="core.xml" />
    <import resource="wf.xml" />
    <import resource="mvc.xml" />
    <import resource="cxf.xml" />
    <import resource="security.xml" />
    <import resource="tx.xml" />
    <import resource="freemarker.xml" />
    <import resource="batch-job.xml" />
    <import resource="camel.xml"/>
    <import resource="matching.xml"/>
    <import resource="notification.xml"/>

    <!--Custom logging -->
    <bean id="slf4CClientLogAppender" class="com.unidata.mdm.backend.service.logging.Sl4JLogAppender">
        <constructor-arg value="UNIDATA_REST_CLIENT" />
    </bean>

    <bean id="restClientCLogger" class="com.unidata.mdm.backend.service.logging.LogService">
        <constructor-arg ref="slf4CClientLogAppender" />
        <constructor-arg value="30" />
        <constructor-arg value="SECONDS" />
    </bean>

    <bean id="applicationContextRefreshListener"
        class="com.unidata.mdm.backend.service.configuration.RefreshContextListener">
        <property name="dataSource" ref="unidataDataSource"/>
        <property name="schemaNames">
            <list>
                <value>public</value>
                <value>unidata_batch_job</value>
                <value>unidata_data_import</value>
                <value>unidata_work_flow</value>
            </list>
        </property>
        <property name="contextRefreshClassNames">
            <list>
                <value>com.unidata.mdm.backend.service.job.scheduler.UnidataSchedulerFactoryBean</value>
                 <value>com.unidata.mdm.backend.service.configuration.synchronizer.ConfigSynchronizer</value>
                <value>com.unidata.mdm.backend.service.model.MetaModelServiceExt</value>
                <value>com.unidata.mdm.backend.service.cleanse.CleanseFunctionServiceExt</value>
                <value>com.unidata.mdm.backend.notification.notifiers.ModelChangesNotifier</value>
                <value>com.unidata.mdm.backend.notification.notifiers.WorkflowAssignmentsNotifier</value>
                <value>com.unidata.mdm.backend.notification.notifiers.MatchingRulesChangesNotifier</value>
                <value>com.unidata.mdm.backend.notification.notifiers.MatchingGroupsChangesNotifier</value>
                <value>com.unidata.mdm.backend.service.configuration.ConfigurationService</value>
                <value>com.unidata.mdm.backend.service.notification.NotificationHandler</value>
                <value>com.unidata.mdm.backend.service.security.utils.LicenseCxfInterceptor</value>
                <value>com.unidata.mdm.backend.service.matching.MatchingRulesService</value>
                <value>com.unidata.mdm.backend.service.matching.MatchingGroupsService</value>
                <value>com.unidata.mdm.backend.service.measurement.MetaMeasurementService</value>
                <value>com.unidata.mdm.backend.service.security.RoleServiceExt</value>
                <value>com.unidata.mdm.backend.service.security.SecurityServiceExt</value>
                <value>com.unidata.mdm.backend.service.statistic.StatServiceExt</value>
                <value>com.unidata.mdm.backend.service.wf.WorkflowService</value>
                <value>com.unidata.mdm.backend.service.job.JobExternalLoader</value>
                <value>com.unidata.mdm.backend.service.audit.AuditEventsWriter</value>
                <value>com.unidata.mdm.backend.service.configuration.MetaDataReindexComponent</value>
                <value>com.unidata.mdm.backend.service.maintenance.MaintenanceService</value>
                <value>com.unidata.mdm.backend.service.model.MetaDependencyService</value>
                <value>com.unidata.mdm.backend.service.model.draft.MetaDraftServiceImpl</value>
            </list>
        </property>
    </bean>

    <bean id="applicationContextCloseListener"
          class="com.unidata.mdm.backend.service.configuration.CloseContextListener">
        <property name="dataSources">
            <list>
                <ref bean="unidataDataSource"/>
                <ref bean="jobDataSource"/>
                <ref bean="wfDataSource"/>
            </list>
        </property>
    </bean>

    <import resource="audit.xml"/>
    <!-- <import resource="job.xml" /> -->
    <!-- <import resource="es.xml" /> -->

</beans>
