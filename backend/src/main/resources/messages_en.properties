enum.DATE = Date
enum.TIME = Time
enum.TIMESTAMP = Timstamp
enum.STRING = String
enum.INTEGER = Integer
enum.NUMBER = Number
enum.BOOLEAN = Logic
enum.BLOB = File
enum.CLOB = Text File
enum.MEASURED = Measured
enum.ANY = Undefined type
app.genericError = An unexpected error has occurred.
app.authenticationFailed.tokenExpired = Failed to log in. The time of the session is over. Please log in again.
app.authenticationFailed.badToken = Failed to log in. Invalid session key was provided.
app.authenticationFailed.badCredentials = Could not log in. Incorrect login or password.

app.authenticationFailed.userLocked = User account is locked. Contact technical support.
app.authenticationFailed.userNotActivated = User account is not yet activated. Contact technical support.
app.apiMethodAuthorizationFailed = You do not have sufficient privileges to execute the method.
app.wrongRoleConfiguration = User roles are incorrectly configured.
user.userCreated = User with login {0} has been created.
app.security.invalid.input = Invalid data, authentication object  null or the user name is not input.
app.security.userExist = User name {0} already exists.
app.security.roleExists = Role with the name {0} already exists.
app.security.license.invalid = The installed server license is invalid {0}.
app.security.requiredFieldsMissing = Not all required fields are filled.
app.security.cannotDeactivate = You can not modify this user. At least one administrator should remain in the system
app.security.cannotCreate = Unable to create user due to {0}
app.security.cannotLogin = Authentication failed. Incorrect login and password.
app.security.noRightsForEndpoint = User does not have access privileges to this interface.

app.job.general.step.submit.failed=Internal job error - cannot submit step to queue. 
app.job.general.step.execution.failed=Internal job error - step execution failed.
app.job.notFound = Operation with identifier [{0}] is not found.
app.job.disabled = Operation with identifier [{0}] is disabled.
app.job.updateError = Error updating operation [{0}].
app.job.parameter.invalidType = Unknown parameter type [{0}].
app.job.batch.execution.failed = Error of execution of operation with name [{0}].
app.job.batch.restart.failed = Error restarting operation for starting with identifier [{0}]
app.job.batch.restart.failed.already.running = Error of restarting operation for starting with identifier [{0}], Operation is already running.
app.job.batch.stop.failed = Error of stopping operation with name [{0}].
app.job.parameter.validationError = Failed to validate parameters of new operation with name [{0}].
app.job.sameName = Operation with name [{0}] already exists.
app.job.cronExpression = Error in syntax of the expression 'cron'.
app.job.sameParameters = Operation [{0}] already exists with the same set of parameters.
app.job.deleteFailed = Unable to delete operation with identifier [{0}]
app.job.alreadyRunning = Operation [{0}] is already running.
app.job.cronExpression.suspicious.second = Do you want to start operation every second?
app.job.cronExpression.suspicious.minute = Do you want to start operation every minute?
app.job.cronExpression.suspicious.cycles_dom = Short cycles in "day of the month" field will be unpredictable closer to the end of the month. Do you want to continue?
app.job.trigger.updateError = Error updating trigger [{0}].
app.job.trigger.parameter.validationError = Validation error of parameters of the new trigger with name [{0}].
app.job.trigger.notFound = Trigger with identifier [{0}] is not found.
app.job.trigger.deleteFailed = Unable to delete trigger with identifier [{0}]
app.job.trigger.startJob.notFound = Operation with identifier [{0}] for starting by trigger is not found.
app.job.trigger.sameName = Trigger with the name [{0}] already exists.
app.job.trigger.recursiveCall = Recursive invocation of the operation is not possible.
app.job.reporting.collected.failures = Runtime error
app.job.mapping.incorrect=Mapping error {0}.
app.job.execution.notFound = Information on execution of the operation with identifier [{0}] is not found.

app.job.mapping.data.name=Update mappings job
app.job.reindex.data.name=Reindex job
app.job.reindex.records=Data records
app.job.reindex.classifiers=Classifier records
app.job.reindex.classified.records=Classified data records
app.job.reindex.relations=Relations
app.job.reindex.empty=Contains no data
app.job.reindex.previous.state=Previous state
app.job.reindex.now=Now
app.job.export.data.name=Export job
app.job.import.data.name=Import job
app.job.import.report.id=Master id
app.job.import.report.external_id=External id
app.job.import.report.origin_id=Origin id
app.job.import.report.source_system=Source system
app.job.import.report.entity_name=Entity name
app.job.import.report.source_of_data=Source of the data
app.job.import.report.from=From
app.job.import.report.to=To
app.job.import.report.is_active=Active
app.job.import.report.is_active.yes=Yes
app.job.import.report.is_active.no=No
app.job.import.report.status=Record status
app.job.import.report.status.created=Created
app.job.import.report.status.updated=Updated
app.job.import.report.status.rejected=Rejected
app.job.import.report.details=Details
app.job.dq.data.name=DQ job
app.job.matching.data.name=Matching job
app.job.merge.duplicates.data.name=Merge duplicates
app.job.merge.duplicates.no.clusters.available=Clusters, available for merge not found
app.job.merge.duplicates.merged=Merged
app.job.merge.duplicates.skept=Skept due to conflicts
app.job.batch.modify.data.name=Batch modification

app.job.batch.modify.report.id=Identifier
app.job.batch.modify.report.result=Result
app.job.batch.modify.report.details=Details
app.job.batch.modify.report.result.success=Success
app.job.batch.modify.report.result.failed=Failed
app.job.batch.delete.data.name=Batch delete
app.job.batch.delete.untouched=Not deleted
app.job.batch.delete.touched=Deleted
app.job.batch.delete.nothing.done=Nothing was touched
app.job.batch.delete.first.records=Report contains only first {0} records
app.job.batch.delete.report.id=Identifier
app.job.batch.delete.report.result=Result
app.job.batch.delete.report.details=Details
app.job.batch.delete.report.result.success=Success
app.job.batch.delete.report.result.failed=Failed
app.job.batch.republish.data.name=Batch republish
app.job.soft.delete.cleanup.name=Cleanup soft deleted records
app.job.soft.delete.cleanup.records.total=Total:
app.job.soft.delete.cleanup.records.deleted=Deleted:
app.job.soft.delete.cleanup.records.failed=Failed:
app.job.collect.stats.data.name=Collect stats

app.job.status.started= - Job started.
app.job.status.starting= - Job is starting.
app.job.status.completed= - Job completed.
app.job.status.stopping= - Job is stopping.
app.job.status.stopped - Job stopped.
app.job.status.failed= - Job failed.
app.job.status.unknown= - Status unknown.

app.job.report.term.records.1=records
app.job.report.term.records.2=records
app.job.report.term.record=record

app.job.report.term.clusters.1=clusters
app.job.report.term.clusters.2=clusters
app.job.report.term.cluster=cluster

app.meta.default.source.system = Default source system used for manual changes and data edits by data steward.
app.meta.default.entities.group.root = Root group
app.meta.default.cleanse.functions.group.root = Root group
app.meta.default.cleanse.functions.group.string = String
app.meta.default.cleanse.functions.group.math = Math
app.meta.default.cleanse.functions.group.logic = Logical
app.meta.default.cleanse.functions.group.convert = Data type parsing
app.meta.default.cleanse.functions.group.misc = Miscellaneous
app.meta.entityNotFound = Entity is not found.
app.meta.notFound = No metadata are found. The name of the requested metadata [{0}].
app.meta.lookupEntityNotFound = Lookup entity is not found.
app.meta.deleteEntityNotFound = Unable to delete. Entity is not found.
app.meta.deleteLookupEntityNotFound = Unable to delete. Lookup entity is not found.
app.meta.entityAlreadyExists = Entity already exists.
app.meta.lookupEntityAlreadyExists = Lookup entity already exists.
app.meta.cannotMarshalModel = Unable to unload the model.
app.meta.cannotUnmarshalModel = Unable to load the model.
app.meta.metadataServiceFailedToInitilalize = Unable to start the the metadata service.
app.meta.metadataInsertFailed = Unable to insert metadata.
app.meta.metadataUpdateFailed = Unable to change metadata.
app.meta.metadataDeleteFailed = Unable to delete metadata.
app.meta.cannotMarshallCleanseFunction = Unable to load data quality function.
app.meta.cannotMarshallCompositeCleanseFunction = Unable to load composite function of data quality.
app.meta.cannotMarshallCleanseFunctionGroup = Unable to load a group of functions of data quality.
app.meta.cannotMarshallSourceSystem = Unable to load system data source.
app.meta.cannotMarshallLookupEntity = Unable to load uplook entity.
app.meta.cannotMarshallNestedEntity = Unable to load nested entity.
app.meta.cannotMarshallEntity = Unable to load entity.
app.meta.cannotMarshallRelation = Unable to load relation.
app.meta.cannotUnmarshallCleanseFunction = Unable to unload data quality function.
app.meta.cannotUnmarshallCompositeCleanseFunction = Unable to unload composite function of data quality.
app.meta.cannotUnmarshallCleanseFunctionGroup = Unable to unload a group of functions of data quality.
app.meta.cannotUnmarshallSourceSystem = Unable to unload system data source.
app.meta.cannotUnmarshallEnumeration = Unable to unload enumeration.
app.meta.cannotUnmarshallLookupEntity = Unable to unload uplook entity.
app.meta.cannotUnmarshallNestedEntity = Unable to unload nested entity.
app.meta.cannotUnmarshallEntity = Unable to unload entity.
app.meta.cannotUnmarshallRelation = Unable to unload relation.
app.meta.cannotUnmarshalGroup = Can not read entity group.
app.meta.cannotMarshallEnumeration = Can not save enumeration.
app.meta.invalidRequiredAttribute = Required attribute is not set.
app.meta.cannotAssembleModel = Unable to assemble model.
app.meta.incorrect = Model is incorrect.
app.draft.incorrect = Draft must be removed as it contains errors.
app.meta.dq.attr.type.mismatch = Attrubute [{0}] with type [{1}] in function [{2}] from [{3}] mismatch the required [{4}].
app.meta.display.group.contain.absent.attr = Display [{0}] contains absent attribute.
app.meta.display.group.contain.incorrect.attr = Display [{0}] contains complex attribute.
app.meta.merge.source.system.absent = Consolidation settings [{0}] contain a reference to non-existent source system [{1}].
app.meta.merge.source.system.incorrect = Consolidation settings [{0}] contain a reference to incorrect source system [{1}] (empty name or invalid values ​​of coefficients).
app.meta.merge.attr.absent = Consolidation settings [{0}] contain non-existent attribute.
app.meta.merge.attr.incorrect = Consolidation settings [{0}] contain incorrect attribute [{1}] (empty name or invalid values ​​of coefficients).
app.meta.source.system.incorrect = Source system [{0}] is incorrect (empty name or invalid values ​​of coefficients).
app.meta.relation.type.modified = Modification of relationship type in [{0}] is not allowed because there are active or recoverable data using this connection.
app.meta.enum.absent = Attribute [{0}] refers to absent enumeration [{1}].
app.meta.lookup.absent = Attribute [{0}] refers to absent lookup entity [{1}].
app.meta.group.node.absent = Group [{0}] that is referenced {1} is deleted or missing.
app.meta.cleanse.function.absent = Function [{0}] from [{1}] does not exist in the system
app.meta.cleanse.function.do.nothing = Function [{0}] from [{1}] does not have action type (validation / enrichment).
app.meta.dq.validation.incorrect = Data validation function [{0}] from [{1}] is incorrect (no name, error text, criticality, error port).
app.meta.dq.doesnt.contain.port = Data validation function [{0}] from [{1}] does not contain the required port [{2}].
app.meta.dq.enrich.incorrect = Data enrichment function [{0}] from [{1}] is incorrect (there is no phase or action).
app.meta.dq.enrich.source.system.absent = Data enrichment function [{0}] from [{1}] for template contains a reference to absent data source [{2}].
app.meta.dq.origin.source.system.absent = Function [{0}] from [{1}] for original data contains a reference to absent data source [{2}].
app.meta.dq.constant.incorrect.type = Function [{0}] from [{1}] on port [{2}] contains a constant of type [{3}] and should [{4}].
app.meta.dq.constant.absent = Function [{0}] from [{1}] does not contain a constant on port [{2}].
app.meta.dq.attr.absent = Function [{0}] used in the quality rule [{1}] from [{2}] refers to absent attribute [{3}].
app.meta.dq.attr.incorrect.type = Function [{0}] used in the quality rule [{1}] of [{2}] refers to the attribute [{3}] which has incorrect type.
app.meta.timeline.overlapping = Timeline [{0}] does not overlap timeline [{1}] that it refers to.
app.meta.importModelInvalidContentType = Invalid content type importing model.
app.meta.updateModelInvalidContentType = Invalid content type updating model.
app.meta.nestedEntitiesIsDuplicated1 = Duplicate names of entities, lookup entities, relations, complex attributes or data sources are not allowed. See details.
app.meta.nestedEntitiesIsDuplicated2 = Duplicate names: [{0}].
app.meta.unavailableMergeAttribute = Consolidation rules contain invalid attributes.
app.meta.merge.factor.incorrect = Incorrect parameters of weight in attribute consolidation are set.
app.meta.unavailableMatchAttribute = Duplicate search rules contain invalid attributes.
app.meta.unavailableAttributesGroups = Rules of displaying records contain invalid attributes.
app.meta.unavailableDqFunction = Quality rules contain incorrect function.
app.meta.unavailableDqAttribute = Quality rules contain invalid attributes.
app.meta.incorrectAttributeTypeInDqFunction = Quality rules contain attributes of incorrect type.
app.meta.incorrectConstantInDqFunction = Quality rules contain invalid attribute values.
app.meta.unavailableLink = There is a link to the entity that does not exist. Entity name: [{0}].
app.meta.element.notValid=Model element contains invalid characters in the unique identifier. Characters: {0}. Identifier: {1}.
app.meta.relation.side.absent = Both sides should be in relation.
app.meta.relationsTimeline = Can not create relation between entities (lookup entities) with non-overlapping timelines of relevance.
app.meta.groupIsAbsent = Groups do not exist.
app.meta.entityGroup.absent = Group in [{0}] is not set.
app.meta.rootGroup.notEmpty = Unable to update groups because they contain entities and lookup entities.
app.meta.group.name_title.absent = Group does not have name or displayable name.
app.meta.codeAttribute.absent = Lookup entity [{0}] does not have code attribute.
app.meta.codeAttribute.incorrect = Code attribite [{0}] of lookup entity [{1}]  fails to meet conditions. Attribute should be: unique, searchable, mandatory, displayable, not hidden and not for reading.
app.meta.simpleAttribute.incorrect = Attribite [{0}] of entity or lookup entity [{1}] doesn't meet the conditions. Attribute should be either of reference type or simple type.
app.meta.periodStart.invalid = Start of period [{0}] does not fall within the global timelines.
app.meta.main.displayable.attr.absent = Main displayable attribite in [{0}] does not exist.
app.meta.periodEnd.invalid = End of period [{0}] does not fall within the global timelines.
app.meta.measurement.settings.not.define = Settings for the measured attribute [{0}] in [{1}] are not defined.
app.meta.connectivity.missing.element = Model element [{0}] of type [{1}] refers to absent element [{2}] of type [{3}].
app.meta.measurement.settings.not.allow = For simple attributes measurement settings [{0}] in [{1}] are not allowed.
app.meta.attr.settings.hidden.!readOnly = Attribute [{0}] in [{1}] has incorrect settings. Attribute can not be hidden and not read-only.
app.meta.attr.dupl = More than one attribute with name [{0}] in [{1}] is found.
app.meta.attr.noSearchable = Entity or lookup entuity [{0}] should contain at least one search attribute on the first level.
app.meta.ss.admin.incorrect = Only one system data source is allowed. Found [{0}]. Names [{1}].
app.meta.ss.weight = Weight for data source [{0}] is incorrect. Weight should be between 0 and 100. [{1}] is defined.
app.meta.attr.link.incorrect = Links to web resource can not be searchable, displayable, main displayable, mandatory or unique. Name of element [{0}]. Name of attribute [{1}].
app.meta.attr.settings.mainDisplayable.!displayable = Attribute [{0}] in [{1}] has incorrect settings. Attribite can not be mail displayable and not displayable.
app.meta.attr.settings.requared.readOnly = Attribute [{0}] in [{1}] has incorrect settings. Mandatory attribute can not be read-only.
app.meta.attr.settings.displayable.hidden = Attribute [{0}] in [{1}] has incorrect settings. Displayable attribute can not be hidden.
app.meta.measurement.settings.refer.undefine.value = Measured attribute [{0}] refers to non-existent value [{1}] in [{2}].
app.meta.measurement.settings.refer.undefine.unit = Measured attribute [{0}] refers to non-existent value [{1}] in [{2}].
app.meta.unmarshal.full.classifier = Unable to parse xtml.
app.meta.marshal.classifier = Unable to convert classifier to xtml.
app.meta.unmarshal.matching.rule = Unable to parse xtml.
app.meta.marshal.matching.rule = Unable to convert matching rules in xtml.
app.meta.unmarshal.matching.group = Unable to parse xtml.
app.meta.marshal.matching.group = Unable to convert matching rules in xtml.
app.meta.identical.names = Names of complex attribute and classifier should not be identical. Name [{0}].
app.meta.classifier.incorrect = Specified classifiers do not exist [{0}].
app.meta.sourceSystemAlreadyExists = Data source with this name already exists
app.meta.reserved.toplevel.name =
[{0}] is invalid name for the top-level object. The object names [Model, Classifier, Audit] are reserved and can not be used.
app.meta.importModelInvalidFileFormat = Invalid file format. Only ZIP is supported.
app.meta.import.elNotFound = Element with name [{0}] of type [{1}] is not found in metamodel.
app.meta.import.elDuplicate = Element with name [{0}] of type [{1}] can not be imported because name is not unique. Element [{2}] of type [{3}] already exists.
app.meta.import.fileStructureInvalid = Structure of model file [{0}] is invalid. Details: [{1}]
app.meta.import.fileUnknown = File [{0}] is invalid, [{1}] can contain only [{2}] files.
app.meta.import.fileUnknownOnlyDirs = File [{0}] is invalid, only folders are allowed on the first level.
app.meta.import.fileDuplNotAllowed = In folder [{0}] only 1 file is allowed, found [{1}].
app.meta.import.unableToParse = Unable to load archive contents [{0}]. Invalid file format. For more information please see error details.
app.meta.link.check.rule.invalid.input = Error in generator of system rules of type 'LinkCheckRule'. Attribute {0} of type {1}, for which the rule should be generated, either is not a reference to lookup entity, or is not array or simple attribute.
app.meta.consistency.check.rule.invalid.input = Error in generator of system rules of type 'ConsistencyCheckRule'. Attribute {0} of type {1}, for which the rule should be generated, either is not a reference to lookup entity, or is not array or simple attribute.
app.classifier.incorrect = Classifier data are incorrect. Name [{0}], displayable name [{1}], pattern for code [{2}].
app.classifier.duplicate.meta.name = Names of entities, lookup entities and classifiers can not be identical.
app.classifier.exist = Attempt to create classifier that already exists.  Classifier name [{0}]. Displayable name [{1}].
app.classifier.not.exist = Classifier does not  exist. Name [{0}].
app.classifier.node.not.exist = Classifier node does not exist. Classifier name [{0}]. ID [{1}].
app.classifier.node.data.incorrect = Node data are incorrect. Classifier name [{0}]. Node name [{1}]. Node code [{2}].
app.classifier.node.attr.dupl = Attribute with name [{0}] occurs more than once. Classifier name[{1}]. Node name [{2}].
app.classifier.node.attr.incorrect = Node attribute data are incorrect. Attribute name [{0}]. Data type [{1}].
app.classifier.node.attr.unavailable = Attribute with this name already exists and has different type. Attribute name [{0}]. New data type [{1}]. Old data type [{2}].
app.classifier.node.move.unavailable = Functionality of moving classifier node is unavailable at this time.
app.classifier.node.update.failed = Error in updating classifier node. Classifier name [{0}]. ID [{1}]. Node name [{2}].
app.classifier.content.type.unsupported = Classifier loading works only for XML and XLSX.
mpo = Imported data are empty.
app.classifier.node.code.incorrect = Code of classifier node [{0}] does not match code pattern [{1}]. Classifier name [{2}].
app.classifier.node.code.doesntMatchParent = Position of classifier node does not match its code [{0}].
app.classifier.code.pattern.incorrect=Code pattern [{0}] is not supported by system. Hightlight symbols is incorrent: {1}.
app.classifier.node.code.doesntMatchParentCode = Code of classifier node [{0}] does not match code of its parent [{1}].
app.classifier.code.notExist = Code pattern does not exist.
app.classifier.node.code.notExist = Node code [{0}] does not exist.
app.classifier.node.parent.notExist = Node parent does not exist.
app.classifier.node.code.notUnique = Node code is not unique. Classifier name [{0}]. Node name [{1}]. Code [{2}].
app.classifier.node.not.unique = Node data are not unique. Classifier name [{0}]. ID [{1}]. Node name [{2}].
app.classifier.parent.node.notFound = Node parent is not found.
app.classifier.node.code.name.notUnique = Pair of node code and name is not unique on this level. Classifier name [{0}]. Node code [{1}]. Node name[{2}].
app.classifier.invalidAttributeValue = Invalid value [{0}] of attribute [{1}], expactable attribute type [{2}].
app.classifier.idResolver.notPresent = Nodes have no attribute which the tree is built on.
app.matching.group.incorrect = Matching rule group is incorrect.
app.matching.group.incorrect.blank.name = Matching rule group [{0}] from [{1}] is incorrect. Name does not exist.
app.matching.group.incorrect.name.long = Matching rule group [{0}] from [{1}] is incorrect. Name exceeds maximum length [{2}].
app.matching.group.incorrect.blank.entity = Matching rule group [{0}] from [{1}] is incorrect. There is no entity which the group applies to.
app.matching.algorithm.need.fields = Algorithm should have fields.
app.matching.group.rule.notFound = Rule or group is not found {0}.
app.matching.field.incorrect.id.absent = Field data are incorrect. There is no field id.
app.matching.field.incorrect.name.absent = Field data are incorrect. There is no field name.
app.matching.algo.incorrect.inner.fields = Match algorithm fields [{0}] are incorrect.
app.matching.algo.incorrect.fields.empty = Match algorithm data [{0}] are incorrect. There are no fields.
app.matching.algo.incorrect.name.blank = Match algorithm data [{0}] are incorrect. Name is empty.
app.matching.algo.incorrect.id.empty = Match algorithm data [{0}] are incorrect. There is no id.
app.matching.algo.doesnot.present = This algorithm does not exist. Algorithm [{0}]. Rule name [{1}].
app.matching.rule.incorrect = Matching rule has incorrect data.
app.matching.rule.incorrect.blank.name = Matching rule [{0}] from [{1}] is incorrect. Name does not exist.
app.matching.rule.incorrect.long.name = Matching rule [{0}] from [{1}] is incorrect. Name exceeds maximum length [{2}].
app.matching.rule.incorrect.blank.entity = Matching rule [{0}] from [{1}] is incorrect. There is no entity which the rule applies to.
app.matching.rule.incorrect.inner.algos = Matching rule [{0}] from [{1}] is incorrect. Errors in inner algorithms.
app.matching.rule.need.algorithms = Matching rule [{0}] from [{1}] should contain at least one algorithm.
app.matching.rule.onlyNotExact = Matching rule [{0}] from [{1}] should contain at least one clear search algorithm.
app.attribute.incorrect.search = Invalid attribute type. Name of attribute [{0}].
app.matching.cluster.notFound = Cluster is not found.
app.matching.cluster.doesNot.contains.record = Cluster does not contain this record.
app.matching.cluster.modified.concurrent = Cluster is updated, its contents was changed.
app.matching.rule.settings.incorrect = Matching rule with name [{0}] is incorrect.
app.matching.group.settings.incorrect = Matching rules group with name [{0}] is incorrect.
app.matching.group.rule.unavailable = Matching rules group [{0}] refers to matching rule [{1}] from [{2}] that does not exist.
app.matching.rule.contain.unavailable.attribute = Group with name [{0}] contains attributes that do not exist in entity / lookup entity [{1}].
app.matching.rule.name.duplicate = Name [{0}] of matching rules group from [{1}] already exists..
app.matching.group.name.duplicate = Name [{0}] of group of matching rules from [{1}] already exists..
app.matching.algorithms.exactalgorithm.name = Exact matching
app.matching.algorithms.exactalgorithm.description = Records will be matched if attributes of records are equal.
app.matching.algorithms.exactalgorithm.anyField = Any attribute
app.matching.algorithms.fuzzyMatchingAlgorithm.name = Fuzzy matching
app.matching.algorithms.fuzzyMatchingAlgorithm.description = Records will be matched in case of close resemblance.
app.matching.algorithms.fuzzyMatchingAlgorithm.anyField = Any attribute

app.matching.algorithms.exact.strict.name=Exact matching
app.matching.algorithms.exact.strict.description=Records will be matched if attributes have exactly same values.
app.matching.algorithms.exact.strict.anyField=Any attribute

app.matching.algorithms.exact.nullall.name=Exact matching (null matches everything)
app.matching.algorithms.exact.nullall.description=Records will be matched if attributes have same values with null matching any value.
app.matching.algorithms.exact.nullall.anyField=Any attribute

app.matching.algorithms.exact.nullnone.name=Exact matching (null matches nothing)
app.matching.algorithms.exact.nullnone.description=Records will be matched if attributes have same values with null matching no value.
app.matching.algorithms.exact.nullnone.anyField=Any attribute

app.matching.algorithms.ifl.name=Inexact fixed length token matching (semi-fuzzy)
app.matching.algorithms.ifl.description=Records will be matched if attributes build same values, being converted to fixed length, normalized tokens.
app.matching.algorithms.ifl.anyField=String attribute

app.cleanse.parserInitFailed = Unable to initialize parser of data quality functions.
app.cleanse.validation.mask = Value [{0}] of attribute [{1}] does not match mask [{2}].
app.cleanse.validation.unique = Value of attribute [{0}] is not unique.
app.cleanse.validation.lookupEntity.notExist = Lookup entity does not exist.
app.cleanse.validation.lookupEntityRecord.notOverlapped = Selected value of record of lookup entity does not cover the entire period of relevance of created record. Make sure that value of lookup entity record is available for the entire period of record actuality. Code attributes values: {0}.
app.cleanse.validation.lookupEntityRecord.notExist = Lookup entity record does not exist. Code attributes values:{0}.
app.cleanse.unableToInitOutputPorts = Unable to initialize output ports of data quality functions.
app.cleanse.unableToInitInputPorts = Unable to initialize input ports of data quality functions.
app.cleanse.unableToReadProperty = Unable to read property file.
app.cleanse.execFailed = Error in executing data quality functions.
app.cleanse.basicInitFailed = Error in initializing data quality functions.
app.cleanse.deleteFailed=Unable to delete cleanse function. You must resolve dependencies first: {0}
app.dq.entityNameIsEmpty = Entity name is empty.
app.dq.cannotReapply = Error in reapplying data quality functions.
app.search.markFailed = Failed to mark record.
app.search.mappingUnknownType = Unknown format.
app.search.invalidFieldsPrefixQuery = Incorrect query format.
app.search.indexDocumentFailed = Error of document indexing.
app.search.invalidFieldsTermQuery = Invalid fields in search term query.
app.search.mappingUnknownNestedEntity = Unknown type of nested record.
app.search.bulkUpdateDocumentFailed = Error occured in bulk document updating.
app.search.invalidFieldsWildcardQuery = Invalid query format.
app.search.updateDocumentFailed = Document updating error.
app.search.mappingIOFailure = Mapping error.
app.search.mappingUnknownLookupEntity = Mapping error. Unknown lookup entity.
app.search.mappingUnknownEntity = Unknown entity / lookup entity.
app.search.searchElasticSearchExceptionCaught = Search query has failed.
app.search.facets.combination = Invalid facets combination.
app.search.formGroup.unavailable = Invalid search query.
app.search.modelIndex.notCreated = Failed to create search metamodel-based index.
app.search.classifiers.notMuch = As a result of search more than [{0}] nodes were found. Please specify conditions.
app.search.complex.related.incorrect = Attempt to create complex related search query failed because of incorrect data.
app.search.mark.not.linked.search.types = Attempt to update record failed because search query is not linked to fields.
app.search.search.bulk.delete.no.entity.name=Bulk delete failed. Entity name not given in the context.
app.data.deleteContainsTargetFailed = Unable to delete relation contains. Deletion of contains object was completed with error.
app.data.duplicateReference = Unable to insert relation. Active relation type of reference already exists and refers to another object.
app.data.containsUpsertFailed = Unable to insert relation. Can not save contains data.
app.data.sidesInactive = Unable to insert relation.Right or left sides of relation are not active.
app.data.fromKeyNotFound = Unable to insert relation. Left end of relation is not found.
app.data.toKeyNotFound = Unable to insert relation. Right end of relation is not found.
app.data.relationNotFoundByName = Relation {0} is not found in metamodel.
app.data.relationUpsertMoreThenOneReference = Unable to insert relation. Relation of type direct reference enables only one element.
app.data.outdated.approve = Unable to approve changes. Record changed status, please update record.
app.data.outdated.decline = Unable to decline changes. Record changed status, please update record.
app.data.upsert.invalidAliasCodeAttribute = Invalid code attribute is set.
app.data.upsert.noRightsForInsert = User [{0}] has no rights to insert  new object [{1}]. No sufficient privileges.
app.data.upsert.noRightsForUpdate = User [{0}] has no rights to update object [{1}]. No sufficient privileges.
app.data.upsert.unable.to.apply.id.generation.strategy=Unable to generate externalId or code attribute value, using given strategy for lookup/register [{0}]. Required record attribute value(s) are missing for [{1}].
app.data.upsert.id.generation.strategy.key.length=Unable to generate externalId using given strategy. Generated key length exceeds the limit of 512 characters.
app.data.etalon.approval.state.change.failed = Unable to change approval status for record.
app.data.delete.noReadRights = User [{0}] has no rights to delete object [{1}]. No sufficient privileges.
app.data.goldenDeleteFailed = Failed to delete. May be record is already deleted, please update record.
app.data.originUpsertBeforeExecutorFailed = Error occured in creating / updating record while Executor is operating.
app.data.etalonDeleteBeforeExecutorFailed = Error occured in deleting record while Executor is operating.
app.data.etalonMergeBeforeExecutorFailed = Error occured in merging records while Executor is operating.
app.data.originDeleteFailed = Failed to delete parent record.
app.data.jaxbTypeFactoryInitFailure = Failed to initialize jaxb factory.
app.data.goldenRecordNotFound = Failed to find master data record.
app.data.hasLinksToYourself = This record of lookup entity is referred by other records.\n Number of referenced records: {0}.
app.data.hasLinksToYourselfWithPeriods = This record of lookup entity is referred by other records.\n Number of referenced records: {0}, relevance periods in records: {1}.
app.data.hasRelationsToYourself = This record of entity is referred by other records.\n Number of referenced records: {0}.
app.data.jaxbCannotUnmarshalConfiguration = Can not read configuration.
app.data.upsertEtalonInactive = Attempt to save deleted record.
app.data.cannotMarshallGolden = Can not save record.
app.data.upsertNoInput = No key is defined or there are no data to insert.
app.data.invalidGetInput = Invalid data for query.
app.data.notFoundByKeys = Record is not found by keys.
app.data.relations.not.found.by.keys = Relation is not found by provided keys.
app.data.insertVistoryFailed = Can not save history record.
app.data.invalidMergeInput = Incorrect input consolidation parameters.
app.data.upsertNoEntityName = Entity name in inserting data is not defined.
app.data.deactivationFailed = Deactivation failed.
app.data.jaxbContextInitFailure = Error in initializing context JAXB.
app.data.cannotMarshallRelation = Error in saving relation.
app.data.upsertWrongAttribute = Invalid attribute for insert.
app.data.keysNotFound = Keys are not found.
app.data.upsertWrongSpecialAttributeType = Incorrect type of special attribute.
app.data.upsertWrongArrayCodeAttributeReferenceType = Incorrect type of attribute array [{0}] referred to [{1}].
app.data.upsertWrongCodeAttributeValue = Invalid value of reference to code attribute.
app.data.upsert.wrong.measurement.values = Attribute has incorrect measured type [{0}].
app.data.upsert.incorrect.enrich.measurement.attr = Measured attribute [{0}] after enrichment in quality rule has got incorrect value [{1}].
app.data.upsert.unavailable.measurement.value = Attribute [{0}] has value that does not exist [{1}]
app.data.upsert.unavailable.measurement.unit = Attribute [{0}] has unit that does not exist [{1}]
app.data.upsert.unavailable.large.object.value = Attribute [{0}] refers to file that does not exist or was deleted from server
app.data.cannotMarshallOrigin = Can not save parent record.
app.data.upsertMissingAttribute = Attribute [{0}] is not found. Please update the page.
app.data.upsertEntityNotFoundByName = Entity [{0}] is not found. Please update the page.
app.data.upsertInvalidKeys = Incorrect keys in inserting record.
app.data.invalidGetGoldenListInput = Incorrect input parameters.
app.data.etalonFailed = Failed to get etalon.
app.data.mergeFailedDuplicatesNotFound = Failed to merge. Duplicates are not found.
app.data.merge.validate.incorrectRecordState = Failed to merge. Record with keys id [{0}], origin id [{1}] has incorrect state: status [{2}], approval status [{3}]
app.data.merge.noMergeRights = User [{0}] has no rights to merge objects [{1}]. No sufficient privileges.
app.data.merge.notFoundByKeys = Record with keys id [{0}], origin id [{1}] is not found.
app.data.join.etalon.id.not.found = Unable to join external key. Etalon ID is not found.
app.data.join.invalid.input = Unable to join external key. Invalid values of external key.
app.data.join.target.register.dont.match = Unable to join external key. Target entity / lookup entity does not match defined one in the key.
app.data.join.key.already.in = Unable to join external key. Key is already joined.
app.data.join.key.already.used = Unable to join external key. Key is already used by another record.
app.data.restore.noRestoreRights = User [{0}] has no rights to restore object [{1}]. No sufficient privileges.
app.data.goldenUpdateFailed = Record update error.
app.data.cannotSaveLOB = Error in saving attachment.
app.data.invalidLobObject = Invalid attachment.
app.data.invalidClobObject = Invalid attachment.
app.data.cannotParseDate = Error in reading date.
app.data.versionFailed = Incorrect version.
app.data.goldenInsertNoAction = Error in inserting new record.
app.data.jaxbCannotSetFieldPermission = Unable to set permissions for the field (JAXB).
app.data.goldenInsertFailed = Error in inserting new record.
app.data.noTypeWrapperForBVTCalculation = Can not define object type for BVT calculation.
app.data.etalonLockInsertFailed = Error in inserting synchronization record for the reference record.
app.data.etalonInitialTransitionInsertFailed = Error in inserting original record of change log.
app.data.etalonOriginInsertTransitionInsertFailed = Error in inserting record of change log for creating original record.
app.data.originTransitionMergeFailed = Error in inserting record of change log for copying consolidated original records.
app.data.etalonEtalonMergeTransitionInsertFailed = Error in inserting record of change log for records merging.
app.data.etalonDuplicatesStateTransitionInsertFailed = Error in inserting record of change log for saving duplicates state.
app.data.originUpsertExistingDQFailedBefore = Data qulity error.
app.data.mergeFailedUpdate = Merging failed.
app.data.cannotLoadLOB = Can not load attachment.
app.data.deleteEnsureOriginFailed = Error in deleting original data.
app.data.upsertWrongAttributeType = Incorrect attribute type [{0}]. Attribute type [{1}] - expected type [{2}].
app.data.upsertWrongCodeAttributeValueType = Incorrect type of code attribute data [{0}]. Type of code attribute data [{1}] - expected type of code attribute data [{2}].
app.data.upsertWrongSimpleAttributeValueType = Incorrect type of data of simple attribute [{0}]. type of data of simple attribute [{1}] - expected type of data of simple attribute [{2}].
app.data.upsertWrongArrayAttributeValueType = Incorrect type of data of attribute array [{0}]. type of data of attribute array [{1}] - expected type of data of attribute array [{2}].
app.data.goldenUpdateNoAction = Error in updating record.
app.data.upsertOriginInactive = Attempt to update inactive record.
app.data.invalidLobUpdate = Error in updating contains. Invalid contains.
app.data.goldenRecordListNotFound = Records are not found.
app.data.mergeFailedWinnerNotFound = Merging failed. The main record is not found.
app.data.invalidOriginUpsertInput = Incorrect input parameters for inserting initial data.
app.data.exportUnableToExportXLS = Error in exporting records to XLS.
app.data.originFailed = Error in receiving original record.
app.data.originInsertFailed = Error in inserting original record.
app.data.init.batch.set.failed = Unable to initialize stream of mass inserting database driver.
app.data.append.batch.set.failed = Unable to append data to stream of mass insert of database driver.
app.data.finish.batch.set.failed = Unable to finish stream of mass insert of database driver.
app.data.origin.batch.insert.failed = Error in batch inserting multiple original records.
app.data.origin.batch.update.failed = Error in batch updating multiple original records.
app.data.copy.stream.close.failed = Error in closing output stream of copying.
app.data.originTransitionAttachFailed = Error in attaching entity of original record.
app.data.cannotUnmarshallOrigin = Error in reading original record.
app.data.attribute.measured.value.notPresent = Specified value in attribute [{0}] does not exist.
app.data.attribute.measured.unit.notPresent = Specified unit in attribute [{0}] does not exist.
app.data.insertVistoryBatchFailed = Error in mass inserting vistory.
app.data.originUpdateFailed = Error in updating original record.
app.data.upsertInvalidOriginInput = Incorrect input parameters in inserting original record.
app.data.originUpsertDQFailedAfter = Data quality error.
app.data.cannotUnmarshallGolden = Error in reading record.
app.data.invalidDeleteInput = Incorrect input parameters in deleting.
app.data.cannotDeleteRefExist = Can not delete record  because of {0} references.
app.data.incorrectEncoding = Incorrect encoding.
app.data.exportUnableToCreateXLS = Error in exporting data. Unable to create XLSX file.
app.data.import.unknownEntityName = Incorrect format of download file [{0}]. Can not find the page for entity or lookup entity [{1}].
app.data.import.unableToParseFile = Unable to parse file. Incorrect file format or file is damaged.
app.data.import.parse.invalid.cell.format = Unable to parse file. Incorrect cell format in string {1}, in column {2}. Expected format {3}.
app.data.import.unknown.file.format = Unknown file format. Only files in XLSX are supported.
app.data.import.duplicate.ids = Records with duplicate keys are detected. Duplicate system keys ({0}), duplicate external keys ({1}).
app.data.import.unableToSaveFile = Unable to save file.
app.data.cannotUnmarshallRelation = Can not load relations.
app.data.consistency.removeUnavailable = This entry in entity is referenced by other records. Number of reference records: {0}.
app.data.consistency.removeUnavailableWithPeriods = This entry in entity is referenced by other records. Number of reference records: {0}, periods of relevance in records: {1}.
app.data.userEventUpsertFailed = Failed to create user message.
app.data.upsert.incorrect.quantity.complex.attrs.range = Number of complex attributes of type [{0}] does not match constraints specified in meta model. Minimum {1} - Maximum {2} - Created {3}.
app.data.upsert.incorrect.quantity.complex.attrs.lower.bound = Number of complex attributes of type [{0}] does not match constraints specified in meta model. Minimum {1} - Maximum infinity - Created {2}.
app.data.upsert.required.attrs.notPresented = Mandatory attribites are not set. Attribute names: {0}.
app.data.upsert.attribute.enum.value.incorrect = This enumeration does not exist. Value [{0}]. Enumeration [{1}].
app.data.pending.record.modify = Record is under approval.
app.data.upsert.etalon.key.uuid.invalid = Key does not match UUID format.
app.data.upsert.origin.key.uuid.invalid = Key does not match UUID format.
app.data.timeline.notExist = Record is not found.
app.data.timeline.noIdentity = Record is not found.
app.data.timeline.rightsNotEnough = You have no rights to view record.
app.data.upsert.hasPendingVersions = You can not change the record that is under approval.
app.data.upsert.rels.hasPendingVersions = Unable to insert relation. Left end of relation is under approval.
app.data.deletePeriod.hasPendingVersions = Unable to delete record that is under approval.
app.data.upsertNoSourceSystem = Data source system is not defined .
app.data.get.noReadRights = User [{0}] has no rights to read object  [{1}]. No sufficient privileges.
app.data.upsert.unavailable.classifier = In entity / lookup entity [{0}] the following classifiers are available [{1}] but record is classified [{2}].
app.data.upsert.incorrect.classifier = In entity classifier name and its node are not defined. Classifier name [{0}]. Node id [{1}].
app.data.upsert.incorrect.classifier.node = Node that classifies record does not exist. Classifier name [{0}]. Node id [{1}].
app.data.delete.relationNotFoundByName = Relation {0} is not found by name.
app.data.get.relationNotFoundByName = Relation {0} is not found by name.
app.data.relations.delete.invalidInput = Incorrect query to delete relations.
app.data.relations.upsert.invalidInput = Incorrect query to insert relations.
app.data.get.invalidInput = Incorrect query to receive relations.
app.data.relations.noInsertRights = User [{1}] has no rights to create references of object  [{2}]. No sufficient privileges.
app.data.relations.noUpdateRights = User [{1}] has no rights to update references of object  [{2}]. No sufficient privileges.
app.data.relations.noReadRights = User [{1}] has no rights to read references of object  [{2}]. No sufficient privileges.
app.data.relations.noDeleteRights = User [{1}] has no rights to delete references of object  [{2}]. No sufficient privileges.
app.data.relation.notFoundByKeys = Relation is not found by keys.
app.data.rels.missingRelToKey = Invalid query to relation. Keys do not exist.
app.data.rels.relToNotFoundByKey = Relation is not found by key.
app.data.import.entities.no.tables.to.process = Incorrect mapping for entity / lookup entity [{0}]. Import tables do not exist.(attribute 'tables').
app.data.import.relations.no.tables.to.process = Incorrect mapping for relation [{0}]. Import tables do not exist.(attribute 'tables').
app.data.import.count.partition.size.failed = Error in counting partition size.
app.data.import.unable.to.parse.exchange.definition = Unable to parse exchange description. Error Jackson [{0}]
app.data.import.incorrect.string.time.format = [{0}] can not be obtained from string [{1}].
app.data.import.unsupported.time.type = [{0}] can not be obtained from this data type [{1}] - value [{2}].
app.data.import.impossible.convert.type = Value [{0}] of attribute [{1}] can not be converted to [{2}].
app.data.import.step.target.undefined = Value of name of entity / lookup entity or relation does not exist. Step can not be executed.
app.data.import.stat.records.total=Total:
app.data.import.stat.relations.total=Total relations:
app.data.import.stat.classifiers.total=Total classifiers:
app.data.import.stat.inserted=Inserted:
app.data.import.stat.updated=Updated:
app.data.import.stat.skept=Skipped:
app.data.import.stat.deleted=Deleted:
app.data.import.stat.failed=Failed:
app.data.classifier.record.not.found = Parent record is not found.
app.data.classifier.record.inactive = Parent record is inactive.
app.data.classifier.name.not.given = Classifier name does not exist.
app.data.classifier.upsert.failed = Insert of classifier data failed.
app.data.classifier.upsert.version.failed = Insert of version of classifier data failed.
app.data.classifier.upsert.wrong.attr.type = Invalid attribute type. Insert is forbidden. Attribute name {0}, attribute type {1}, expected type {2}
app.data.bulk.operation.modify = Modify records
app.job.batch.modify.records.total=Total records:
app.job.batch.modify.relations.total=Total relations:
app.job.batch.modify.classifiers.total=Total classifiers:
app.job.batch.modify.updated=Updated:
app.job.batch.modify.failed=Failed:
app.job.batch.modify.deleted=Deleted:
app.job.batch.modify.skept=Skipped:
app.data.bulk.operation.republish = Publish records
app.data.bulk.operation.import = Import records from Excel
app.data.bulk.operation.export = Export records to Excel
app.data.bulk.operation.remove = Delete records
app.bulk.operations.modify.record.incorrect = These records should contain names.
app.data.global.user.exit.exception=User exit exception. {0}
app.wf.startProcessFailed = Failed to start process.
app.wf.declineRecordChangeFailedParamsMissing = Failed to decline record changes. One or more parameters are not defined.
app.wf.approveRecordChangeFailedParamsMissing = Failed to approve record changes. One or more parameters are not defined.
app.wf.completeProcessFailedParamsMissing = Failed to complete process of type {0}. One or more parameters are not defined.
app.wf.versions.update.error = Failed to update versions in status of changes confirmation.
app.wf.versions.update.relations.error = Failed to update versions of relations in status of changes confirmation.
app.wf.versions.approve.relations.error = Failed to confirm versions of relations in status of changes confirmation.
app.wf.cannot.complete.task.not.found = Can not complete task. Task is not found.
app.wf.cannot.start.process = Can not start runtime process. Invalid result from subsystem of runtime processes.
app.wf.cannot.start.process.handler.denial = Can not start runtime process. User handler disabled process start with message: {0}.
app.wf.cannot.complete.task.more.then.one = Can not complete task. More than one task to complete.
app.wf.cannot.add.process.comment.task.not.found = Can not add comment to process. Task is not found.
app.wf.cannot.add.task.comment.task.not.found = Can not add comment to task. Task is not found.
app.wf.cannot.get.comments.no.params = Can not load comments. Parameters of task and process do not exist.
app.wf.cannot.get.attachments.no.params = Can not load attached file. Parameters of task and process do not exist.
app.wf.cannot.add.attachment.no.params = Can not attach file. Parameters of task and process do not exist.
app.wf.cannot.add.comments.no.params = Can not add comments. Parameters of task and process do not exist.
app.wf.cannot.add.process.attachment.task.not.found = Can not add file to process. Task is not found.
app.wf.cannot.add.task.attachment.task.not.found = Can not add file to task. Task is not found.
app.wf.cannot.get.content.attachment.not.found = Can not load content. Attached file is not found.
app.wf.cannot.assign.task.not.found = Can not assign task. Task is not found.
app.wf.cannot.unassign.task.not.found = Can not unassign task. Task is not found.
app.wf.cannot.assign.task.engine.error = Can not assign task: {0}.
app.wf.cannot.unassign.task.engine.error = Can not unassign task: {0}.
app.wf.cannot.generate.diagram.process.not.found = Can not generate diagram. Process is not find for id = {0}.
app.wf.cannot.generate.diagram.historical.process.not.found = Can not generate diagram. Historical process is not find for id = {0}.
app.wf.cannot.identify.reject.record = Can not identify record in rejection of changes.
app.wf.cannot.identify.accept.record = Can not identify record in accept of changes.
app.wf.APPROVED = Aproved
app.wf.DECLINED = Declined
app.wf.RUNNING = Running
app.wf.WorkflowProcessType.RECORD_EDIT = Change confirmation
app.wf.WorkflowProcessType.RECORD_DELETE = Record delition
app.wf.WorkflowProcessType.RECORD_RESTORE = Record restoring
app.wf.WorkflowProcessType.RECORD_MERGE = Record merging
app.wf.WorkflowProcessType.RECORD_EDIT.description = Confirmation of changes for general-purpose data record
app.wf.WorkflowProcessType.RECORD_DELETE.description = Deletion of records for general-purpose data record
app.wf.WorkflowProcessType.RECORD_RESTORE.description = Restoring of records for general-purpose data record
app.wf.WorkflowProcessType.RECORD_MERGE.description = Merging of records for general-purpose data record
app.soap.request.info.empty.entityName = Statistics request does not indicate the entity which the request is addressed to.
app.soap.request.info.empty.from.to = Statistics request does not indicate one of the range boundaries.
app.soap.request.info.from.after.to = Date range is incorrect in statistics request. Start date of range [{0}] is later or equal to the end date of range [{1}].
app.soap.request.merge.empty.master.keys = In consolidation request master record is not definied.
app.soap.request.merge.empty.duplicate.keys = In consolidation request no merged record is defined.
app.soap.job.parameters.validation.errors = Error in validation of operation parameters :\n{0}
app.soap.job.parameter.withoutName = Parameter name is not set [{0}]
app.soap.job.parameter.withoutType = Parameter type is not set [{0}]
app.soap.job.parameter.withNullValue = Parameter value is not set [{0}]
app.audit.record.operation.upsert.before.origin = Operation of saving original data
app.audit.record.operation.upsert.before.etalon = Operation of saving master data
app.audit.record.operation.restore.before = Record restoring
app.audit.record.operation.reject.before.wipe = Record rejection (without restoring)
app.audit.record.operation.reject.before = Record rejection
app.audit.record.operation.accept.before = Record confirmation
app.audit.record.operation.merge.before = Record merging
app.audit.record.operation.delete.before.wipe = Record deletion (without restoring)
app.audit.record.operation.delete.before = Record deletion
app.user.property.validationError = Error in validation of user properties
app.user.property.validationError.name.property.empty = Parameter 'name' can not be empty.
app.user.property.validationError.name.property.length = Parameter 'name' exceeds length of {1} characters.
app.user.property.validationError.displayName.property.empty = Parameter 'displayable name' can not be empty.
app.user.property.validationError.displayName.property.length = Parameter 'displayable name' exceeds length of {1} characters.
app.user.property.validationError.name.not.unique = Name of user property {0} already exists. Name of user property should be unique.
app.user.property.validationError.displayName.not.unique = Displayable name of user property {0} already exists. Displayable name of user property should be unique.
app.user.data.validationError = Error in user data validation.
app.user.data.validationError.userName.empty = User name can not be empty.
app.user.data.validationError.userName.length = User name {0} exceeds length of {1} characters.
app.user.data.validationError.password.empty = Password can not be empty.
app.user.data.validationError.password.length = Password exceeds length of {0} characters.
app.user.data.validationError.email.length = Email {0} exceeds length of {0} characters.
app.user.data.validationError.firstname.length = User name {0} exceeds length of {0} characters.
app.user.data.validationError.lastname.length = Last name {0} exceeds length of {0} characters.

app.user.events.export.statistic.success=Statistics export - successfully finished.
app.user.events.export.statistic.unsuccess=Statistics export - failed to export.
app.user.events.export.classifier.xlsx.success=Classifiers export - successfully finished.
app.user.events.export.classifier.xlsx.unsuccess=Classifiers export - failed to export.
app.user.events.export.classifier.xml.success=Classifiers export - successfully finished.
app.user.events.export.classifier.xml.unsuccess=Classifiers export - failed to export.
app.user.events.import.update.classifier.step1.success=Classifiers import. Step 1: save to database  - successfully finished. You should wait for finish of next step: reindex.
app.user.events.import.update.classifier.step2.success=Classifiers import. Step 2: reindex  - successfully finished. All steps are completed.
app.user.events.import.update.classifier.step2.fail=Classifiers import. Step 2: reindex  - end with error.
app.user.events.import.classifier.unsuccess=Classifiers import - failed to import.
app.user.events.import.data.unsuccess=Records import - Failed to import file [{0}]. Please, see the report for details.
app.user.events.export.data.entity.result=Export of the [{0}] register to Excel result.
app.user.events.export.data.lookup.result=Export of the [{0}] directory to Excel result.
app.user.events.export.metadata.success=Metamodel export - successfully finished.

app.role.property.validationError = Error in role property validation.
app.role.property.validationError.name.property.empty = Parameter 'name' can not be empty.
app.role.property.validationError.name.property.length = Parameter 'name' exceeds length of {1} characters.
app.role.property.validationError.displayName.property.empty = Parameter 'displayable name' can not be empty.
app.role.property.validationError.displayName.property.length = Parameter 'displayable name' exceeds length of {1} characters.
app.role.property.validationError.name.not.unique = Name of role property {0} already exists. Name of role property should be unique.
app.role.property.validationError.displayName.not.unique = Displayable name of role property {0} already exists. Displayable name of role property should be unique.
app.role.data.validationError = Error in role data validation.
app.role.data.validationError.roleName.empty = Role name can not be empty.
app.role.data.validationError.roleName.length = Role name {0} exceeds length of {1} characters.
app.role.data.validationError.displayName.length = Displayable role name {0} exceeds length of {1} characters.
app.role.data.validationError.roleType.empty = Role type can not be empty.
app.role.data.validationError.roleType.length = Role type {0} exceeds length of {1} characters.
app.measurement.base.not.define = Basic value is not defined in unit with id [{0}].
app.measurement.base.unit.dupl = Basic value for unit [{0}] is defined more than once.
app.measurement.dupl.id = Unit with ID [{0}] occurs more than once.
app.measurement.value.id.not.define = Unique value identifier is not defined or is too long [{0}].
app.measurement.id.incorrect.pattern = Id [{0}] fails to meet condition. Id can contain only the following characters: latin letters and numbers.
app.measurement.value.name.not.define = Value name is not defined or is too long [{0}].
app.measurement.value.shortName.not.define = Value is not defined or is too long [{0}].
app.measurement.unit.id.not.define = Unique unit identifier is not defined  or is too long [{0}].
app.measurement.unit.ids.duplicated = Unit identifiers are duplicated. Identifier [{0}], value [{1}].
app.measurement.unit.name.not.define = Unit name is not defined  or is too long [{0}].
app.measurement.unit.shortName.not.define = Unit is not defined or is too long [{0}].
app.measurement.unit.function.not.define = Converting function of unit to the base one is not defined or is too long [{0}].
app.measurement.unit.valueId.not.define = Unique value identifier is not defined in unit [{0}]
app.measurement.content.type.unsupported = Only xml format is supported.
app.measurement.marshal.failed = Failed to generate xml file, please try again.
app.measurement.conversion.failed = Converting to base unit failed.
app.measurement.conversion.function.incorrect = Converting function [{0}] in unit  [{1}] is incorrect.
app.measurement.base.conversion.function.incorrect = Basic converting function [{0}] is incorrect. It should be [{1}].
app.measurement.value.doesnt.exist = Unit [{0}] does not exist.
app.measurement.attribute.settings.not.define = Unit settings for attribute [{0}] do not exist.
app.measurement.removing.forbidden = Deletion is forbidden because units are involved in entities / lookup entities [{0}].
app.measurement.merge.impossible.unit.was.removed = Unit [{0}] was removed.
app.measurement.merge.impossible.unit.was.changed = In unit [{0}] something other than the names was changed.
app.measurement.value.removed = Please update page, someone has already changed one of value.
app.db.schemaVersionValidationFailed = Validation of version of data schema failed.
app.system.undefined = Undefined error has occured.
app.system.connection.unwrap = Can not access to SQL object of database connection.
app.system.connection.get = Can not get connection to database.
app.system.request.tooLarge = Request exceeds the maximum size in [{0}] megabytes
app.system.database.cannotConnect = Can con connect to database.
app.system.platform.version.undefined = File backend.properties does not contain property 'unidata.platform.version' or property is not defined. Running is not possible.
app.system.platform.version.invalid = Property 'unidata.platform.version' contains invalid data. Property should be definied in major.minor format [.revision optionally] (all natural numbers)
app.system.node.id.undefined = Property 'unidata.node.id' is not defined. System can not create records.
app.data.republiation.incorrect.keys = Requested record does not exist or is under approval.
app.notification.failed = Notification reference failed.
app.unmarshalling = Unable to parse xml document.
app.marshalling = Unable to convert object to xml file.
app.conversion.attachment.failed = Unable to process attached file.
app.conversion.stream.string.failed = Unable to process input data to string.
app.conversion.excel.classifier.failed=Unable to convert xlsx file to classifier. Check file format and it content.
app.conversion.classifier.xml.failed = Unable to convert classifier xml file.
app.conversion.classifier.xlsx.failed = Unable to convert classifier xlsx file.
app.matching.import.unsupported = Matching settings import is possible only for xml format.
app.remove.forbid = Element deletion [{0}] is forbidden because element [{1}] refers to it.
app.config.unableToVerify = Ubable to verify configuration file.
app.config.notInSync = Configuration files on this node are different from other nodes of cluster.
app.incorrect.xml.attribute.number = Value [{0}] should be digital.
app.sys.log.file.appender.not.found = System file log appender is not found. System may be incorrectly configured. Please check logback.xml.
app.maintenance.cluster = System is in maintenance mode. Reason: [{0}] .
app.maintenance.cluster.metaImport = User [{0}] started to import metamodel. Please wait a moment until this operation is complete.
app.statistic.severity.name.display = Criticality
app.statistic.category.name.display = Category
app.statistic.total.name.display = Total
app.statistic.systemCategory.name.display = System errors
app.statistic.export.title.total=Total
app.statistic.export.title.errors=Errors
app.statistic.export.title.duplicates=Duplicates
app.statistic.export.title.clusters=Clusters
app.statistic.export.title.updated=Updated
app.statistic.export.title.merged=Merged
app.statistic.export.title.new=New
app.statistic.export.entity.name=Entity name
app.statistic.export.entity.name.displayable=Displayable entity name

unidata.properties.group.invalid.classification.data.clean.job=unidata.properties.group.invalid.classification.data.clean.job
invalid.classification.data.clean.job.enabled=invalid.classification.data.clean.job.enabled
invalid.classification.data.clean.job.execution.time=invalid.classification.data.clean.job.execution.time
app.classifier.code.pattern.unknown.symbol=Unknown symbol in position {0}.
app.classifier.code.pattern.must.be.placeholder=Number placeholder must be in position {0}. Duplicates of delimiters not permit.
app.meta.element.withoutId=Element of model without identificator. Tag: {0}.
app.soap.request.search.atom.operator.is.not.set=
unidata.notification.add.external.id.to.attributes=Add identifiers from external systems for atrributes links
app.classifier.import.by.code.without.pattern=Can't import classifier by code without code pattern.
app.classifier.import.by.code.without.validation.by.level=Can't import classifier by code without validation code by level.
app.user.events.import.new.classifier.success=Import of new classifier is finished.
app.classifier.node.node.name.notUnique=Pair of node code and name is not unique on this level. Classifier name [{0}]. Node code [{1}]. Node name[{2}].
app.classifier.code.pattern.wrong.position.of.zeros.filler=Wrong position {0} for zeros filler.
app.join.user.exit.before.error=Error happend in user exit of join operation. {0}
app.join.user.exit.after.error=Error happend in user exit of join operation. {0}
app.split.user.exit.before.error=Error happend in user exit of split operation. {0}
app.split.user.exit.after.error=Error happend in user exit of split operation. {0}
app.classifier.attributes.modification.with.data=Attributes modification is not avalible for node with data.
app.classifier.attributes.is.not.unique=
app.data.bulk.operation.remove.relations.from=Remove relations to element
app.job.batch.remove.relations.nothing.done=Nothing was touched
app.job.parameters.not.set=
app.job.batch.remove.relations.name=Realtions batch remove

unidata.elastic.admin.action.timeout=Elasticsearch admin requests time out
