project.ext{
    generatedXsdDir = new File(projectDir, "src/main/generated")
    // TODO: add API version component as a variable
    xsdDir = new File(projectDir, "src/main/resources/schemas/3.0")
    bindingDir = new File (projectDir, "binding")
}

configurations {
    antXjc
    antXjcPlugin
}

dependencies {
    antXjc 'org.glassfish.jaxb:jaxb-xjc:2.2.11'
    antXjc 'org.glassfish.jaxb:jaxb-core:2.2.11'
    antXjc 'org.glassfish.jaxb:jaxb-runtime:2.2.11'
    // antXjc 'javax.xml.bind:jaxb-api:2.2.11'
    antXjcPlugin "com.github.jaxb-xew-plugin:jaxb-xew-plugin:1.5"
    antXjcPlugin "net.java.dev.jaxb2-commons:jaxb-fluent-api:2.1.8"
    antXjcPlugin "org.jvnet.jaxb2_commons:jaxb2-basics-annotate:1.0.2"
    // antXjcPlugin "net.codesup.util:jaxb2-rich-contract-plugin:1.15.0"
}

// For general XJC usage see: see https://jaxb.java.net/2.2.11/docs/ch04.html#tools-xjc-ant-task
// JAXB @XmlElementWrapper Plugin: https://github.com/dmak/jaxb-xew-plugin
task xsd2Java() {
    inputs.files xsdDir.listFiles()
    outputs.files generatedXsdDir

    doLast {

        //task may be run before all used dirs are created => create them manually
        generatedXsdDir.mkdirs()
        buildDir.mkdirs()

        ant.taskdef(name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask',
                classpath: configurations.antXjc.asPath)

        ant.xjc(destdir: generatedXsdDir, encoding: 'UTF-8', removeOldOutput: 'yes', extension: true) {
            classpath {
                pathelement(path: configurations.antXjcPlugin.asPath)
            }
            schema (dir: xsdDir, includes: "*.xsd")
            binding (dir: bindingDir, includes: '*.xjb')
            produces (dir: new File(generatedXsdDir, 'com/unidata/mdm'), includes: '**/*')
            arg(value: "-Xannotate")
            // arg(value: "-Xcopy")
            // arg(value: "-constructor=n")
            arg(value: "-Xxew")
            arg(value: "-Xxew:instantiate lazy")
            arg(value: "-Xxew:plural")
            arg(value: "-Xxew:summary $buildDir/xew-summary.txt")
            arg(value: "-Xfluent-api")
        }
    }
}



